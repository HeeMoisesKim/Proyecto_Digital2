

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 18:58:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	idataBANK0
   371  037E                     __pidataBANK0:	
   372                           
   373                           ;initializer for _ADC2
   374  037E  3404               	retlw	4
   375                           
   376                           ;initializer for _ADC1
   377  037F  3405               	retlw	5
   378                           
   379                           ;initializer for _estado
   380  0380  3401               	retlw	1
   381  000B                     _INTCONbits	set	11
   382  0009                     _PORTE	set	9
   383  0008                     _PORTD	set	8
   384  0007                     _PORTC	set	7
   385  0005                     _PORTA	set	5
   386  0006                     _PORTB	set	6
   387  001A                     _RCREG	set	26
   388  0019                     _TXREG	set	25
   389  000C                     _PIR1bits	set	12
   390  0018                     _RCSTAbits	set	24
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCON	set	20
   393  0085                     _TRISAbits	set	133
   394  0089                     _TRISE	set	137
   395  0088                     _TRISD	set	136
   396  0087                     _TRISC	set	135
   397  0086                     _TRISB	set	134
   398  0085                     _TRISA	set	133
   399  009A                     _SPBRGH	set	154
   400  0099                     _SPBRG	set	153
   401  008C                     _PIE1bits	set	140
   402  0098                     _TXSTAbits	set	152
   403  0087                     _TRISCbits	set	135
   404  0094                     _SSPSTATbits	set	148
   405  0094                     _SSPSTAT	set	148
   406  043B                     _TRISC3	set	1083
   407  043D                     _TRISC5	set	1085
   408  0187                     _BAUDCTLbits	set	391
   409                           
   410                           ; #config settings
   411  0000                     
   412                           	psect	cinit
   413  000F                     start_initialization:	
   414  000F                     __initialization:	
   415                           
   416                           ; Initialize objects allocated to BANK0
   417  000F  120A  118A  237E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   418  0014  00BA               	movwf	__pdataBANK0& (0+127)
   419  0015  120A  118A  237F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   420  001A  00BB               	movwf	(__pdataBANK0+1)& (0+127)
   421  001B  120A  118A  2380  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   422  0020  00BC               	movwf	(__pdataBANK0+2)& (0+127)
   423                           
   424                           ; Clear objects allocated to BANK0
   425  0021  1383               	bcf	3,7	;select IRP bank0
   426  0022  3020               	movlw	low __pbssBANK0
   427  0023  0084               	movwf	4
   428  0024  3033               	movlw	low (__pbssBANK0+19)
   429  0025  120A  118A  2370  120A  118A  	fcall	clear_ram0
   430                           
   431                           ; Clear objects allocated to COMMON
   432  002A  01FC               	clrf	__pbssCOMMON& (0+127)
   433  002B  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   434  002C                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  002C                     __end_of__initialization:	
   438  002C  0183               	clrf	3
   439  002D  120A  118A  2AD6   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bssCOMMON
   442  007C                     __pbssCOMMON:	
   443  007C                     _RecibeSPI:	
   444  007C                     	ds	1
   445  007D                     _recorre:	
   446  007D                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449  0020                     __pbssBANK0:	
   450  0020                     _contador:	
   451  0020                     	ds	1
   452  0021                     _Heechan:	
   453  0021                     	ds	1
   454  0022                     _d4:	
   455  0022                     	ds	1
   456  0023                     _c4:	
   457  0023                     	ds	1
   458  0024                     _b4:	
   459  0024                     	ds	1
   460  0025                     _a4:	
   461  0025                     	ds	1
   462  0026                     _d3:	
   463  0026                     	ds	1
   464  0027                     _c3:	
   465  0027                     	ds	1
   466  0028                     _b3:	
   467  0028                     	ds	1
   468  0029                     _a3:	
   469  0029                     	ds	1
   470  002A                     _d2:	
   471  002A                     	ds	1
   472  002B                     _c2:	
   473  002B                     	ds	1
   474  002C                     _b2:	
   475  002C                     	ds	1
   476  002D                     _a2:	
   477  002D                     	ds	1
   478  002E                     _d1:	
   479  002E                     	ds	1
   480  002F                     _c1:	
   481  002F                     	ds	1
   482  0030                     _b1:	
   483  0030                     	ds	1
   484  0031                     _a1:	
   485  0031                     	ds	1
   486  0032                     _flag:	
   487  0032                     	ds	1
   488                           
   489                           	psect	dataBANK0
   490  003A                     __pdataBANK0:	
   491  003A                     _ADC2:	
   492  003A                     	ds	1
   493  003B                     _ADC1:	
   494  003B                     	ds	1
   495  003C                     _estado:	
   496  003C                     	ds	1
   497                           
   498                           	psect	clrtext
   499  0370                     clear_ram0:	
   500                           ;	Called with FSR containing the base address, and
   501                           ;	W with the last address+1
   502                           
   503  0370  0064               	clrwdt	;clear the watchdog before getting into this loop
   504  0371                     clrloop0:	
   505  0371  0180               	clrf	0	;clear RAM location pointed to by FSR
   506  0372  0A84               	incf	4,f	;increment pointer
   507  0373  0604               	xorwf	4,w	;XOR with final address
   508  0374  1903               	btfsc	3,2	;have we reached the end yet?
   509  0375  3400               	retlw	0	;all done for this memory range, return
   510  0376  0604               	xorwf	4,w	;XOR again to restore value
   511  0377  2B71               	goto	clrloop0	;do the next byte
   512                           
   513                           	psect	cstackCOMMON
   514  0070                     __pcstackCOMMON:	
   515  0070                     ?_setup:	
   516  0070                     ?_spiWrite:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_spiWrite:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_enviar_dato:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_ISR:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_main:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?___awmod:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     spiWrite@dat:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ___awmod@divisor:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 2 bytes @ 0x0
   542  0070                     	ds	2
   543  0072                     ___awmod@dividend:	
   544                           
   545                           ; 2 bytes @ 0x2
   546  0072                     	ds	2
   547  0074                     ??___awmod:	
   548                           
   549                           ; 1 bytes @ 0x4
   550  0074                     	ds	1
   551  0075                     ___awmod@counter:	
   552                           
   553                           ; 1 bytes @ 0x5
   554  0075                     	ds	1
   555  0076                     ___awmod@sign:	
   556                           
   557                           ; 1 bytes @ 0x6
   558  0076                     	ds	1
   559  0077                     ??_ISR:	
   560                           
   561                           ; 1 bytes @ 0x7
   562  0077                     	ds	5
   563                           
   564                           	psect	cstackBANK0
   565  0033                     __pcstackBANK0:	
   566  0033                     ?_spiInit:	
   567  0033                     ?_USART_setup:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0033                     ??_enviar_dato:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0033                     spiInit@sDataSample:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0033                     USART_setup@baudrate:	
   577                           ; 1 bytes @ 0x0
   578                           
   579                           
   580                           ; 2 bytes @ 0x0
   581  0033                     	ds	1
   582  0034                     spiInit@sClockIdle:	
   583  0034                     enviar_dato@dato:	
   584                           ; 1 bytes @ 0x1
   585                           
   586                           
   587                           ; 1 bytes @ 0x1
   588  0034                     	ds	1
   589  0035                     spiInit@sTransmitEdge:	
   590  0035                     USART_setup@tx_enable:	
   591                           ; 1 bytes @ 0x2
   592                           
   593                           
   594                           ; 1 bytes @ 0x2
   595  0035                     	ds	1
   596  0036                     ??_spiInit:	
   597  0036                     spiInit@sType:	
   598                           ; 1 bytes @ 0x3
   599                           
   600  0036                     USART_setup@rc_enable:	
   601                           ; 1 bytes @ 0x3
   602                           
   603                           
   604                           ; 1 bytes @ 0x3
   605  0036                     	ds	1
   606  0037                     ??_setup:	
   607  0037                     USART_setup@sincrono_asincrono:	
   608                           ; 1 bytes @ 0x4
   609                           
   610                           
   611                           ; 1 bytes @ 0x4
   612  0037                     	ds	1
   613  0038                     ??_USART_setup:	
   614  0038                     ??_main:	
   615                           ; 1 bytes @ 0x5
   616                           
   617                           
   618                           ; 1 bytes @ 0x5
   619  0038                     	ds	2
   620                           
   621                           	psect	maintext
   622  02D6                     __pmaintext:	
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   625 ;;
   626 ;; *************** function _main *****************
   627 ;; Defined at:
   628 ;;		line 180 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : B00/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       2       0       0       0
   645 ;;      Totals:         0       2       0       0       0
   646 ;;Total ram usage:        2 bytes
   647 ;; Hardware stack levels required when called:    4
   648 ;; This function calls:
   649 ;;		_USART_setup
   650 ;;		_enviar_dato
   651 ;;		_setup
   652 ;; This function is called by:
   653 ;;		Startup code after reset
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _main
   659  02D6                     _main:	
   660  02D6                     l1417:	
   661                           ;incstack = 0
   662                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   663                           
   664                           
   665                           ;main.c: 181:     setup();
   666  02D6  120A  118A  2316  120A  118A  	fcall	_setup
   667                           
   668                           ;main.c: 182:     USART_setup(9600, 1, 1, 0);
   669  02DB  3080               	movlw	128
   670  02DC  1283               	bcf	3,5	;RP0=0, select bank0
   671  02DD  1303               	bcf	3,6	;RP1=0, select bank0
   672  02DE  00B3               	movwf	USART_setup@baudrate
   673  02DF  3025               	movlw	37
   674  02E0  00B4               	movwf	USART_setup@baudrate+1
   675  02E1  01B5               	clrf	USART_setup@tx_enable
   676  02E2  0AB5               	incf	USART_setup@tx_enable,f
   677  02E3  01B6               	clrf	USART_setup@rc_enable
   678  02E4  0AB6               	incf	USART_setup@rc_enable,f
   679  02E5  01B7               	clrf	USART_setup@sincrono_asincrono
   680  02E6  120A  118A  21FB  120A  118A  	fcall	_USART_setup
   681  02EB                     l1419:	
   682                           
   683                           ;main.c: 183:     _delay((unsigned long)((100)*(4000000/4000.0)));
   684  02EB  3082               	movlw	130
   685  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   686  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   687  02EE  00B9               	movwf	??_main+1
   688  02EF  30DD               	movlw	221
   689  02F0  00B8               	movwf	??_main
   690  02F1                     u1067:	
   691  02F1  0BB8               	decfsz	??_main,f
   692  02F2  2AF1               	goto	u1067
   693  02F3  0BB9               	decfsz	??_main+1,f
   694  02F4  2AF1               	goto	u1067
   695  02F5                     l1421:	
   696                           
   697                           ;main.c: 185:         if(flag == 0){
   698  02F5  1283               	bcf	3,5	;RP0=0, select bank0
   699  02F6  1303               	bcf	3,6	;RP1=0, select bank0
   700  02F7  0832               	movf	_flag,w
   701  02F8  1D03               	btfss	3,2
   702  02F9  2AFB               	goto	u1051
   703  02FA  2AFC               	goto	u1050
   704  02FB                     u1051:	
   705  02FB  2B06               	goto	l1427
   706  02FC                     u1050:	
   707  02FC                     l1423:	
   708                           
   709                           ;main.c: 186:             enviar_dato(recorre);
   710  02FC  087D               	movf	_recorre,w
   711  02FD  120A  118A  235A  120A  118A  	fcall	_enviar_dato
   712  0302                     l1425:	
   713                           
   714                           ;main.c: 187:             flag = 1;
   715  0302  1283               	bcf	3,5	;RP0=0, select bank0
   716  0303  1303               	bcf	3,6	;RP1=0, select bank0
   717  0304  01B2               	clrf	_flag
   718  0305  0AB2               	incf	_flag,f
   719  0306                     l1427:	
   720                           
   721                           ;main.c: 189:         PORTB = a1;
   722  0306  0831               	movf	_a1,w
   723  0307  0086               	movwf	6	;volatile
   724  0308                     l1429:	
   725                           
   726                           ;main.c: 190:         _delay((unsigned long)((10)*(4000000/4000.0)));
   727  0308  300D               	movlw	13
   728  0309  1283               	bcf	3,5	;RP0=0, select bank0
   729  030A  1303               	bcf	3,6	;RP1=0, select bank0
   730  030B  00B9               	movwf	??_main+1
   731  030C  30FB               	movlw	251
   732  030D  00B8               	movwf	??_main
   733  030E                     u1077:	
   734  030E  0BB8               	decfsz	??_main,f
   735  030F  2B0E               	goto	u1077
   736  0310  0BB9               	decfsz	??_main+1,f
   737  0311  2B0E               	goto	u1077
   738  0312  2AF5               	goto	l1421
   739  0313  120A  118A  280C   	ljmp	start
   740  0316                     __end_of_main:	
   741                           
   742                           	psect	text1
   743  0316                     __ptext1:	
   744 ;; *************** function _setup *****************
   745 ;; Defined at:
   746 ;;		line 199 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		_spiInit
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _setup
   776  0316                     _setup:	
   777  0316                     l1195:	
   778                           ;incstack = 0
   779                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   780                           
   781                           
   782                           ;main.c: 200:     PORTA = 0;
   783  0316  1283               	bcf	3,5	;RP0=0, select bank0
   784  0317  1303               	bcf	3,6	;RP1=0, select bank0
   785  0318  0185               	clrf	5	;volatile
   786                           
   787                           ;main.c: 201:     PORTB = 0;
   788  0319  0186               	clrf	6	;volatile
   789                           
   790                           ;main.c: 202:     PORTC = 0;
   791  031A  0187               	clrf	7	;volatile
   792                           
   793                           ;main.c: 203:     PORTD = 0;
   794  031B  0188               	clrf	8	;volatile
   795                           
   796                           ;main.c: 204:     PORTE = 0;
   797  031C  0189               	clrf	9	;volatile
   798                           
   799                           ;main.c: 205:     TRISA = 0;
   800  031D  1683               	bsf	3,5	;RP0=1, select bank1
   801  031E  1303               	bcf	3,6	;RP1=0, select bank1
   802  031F  0185               	clrf	5	;volatile
   803                           
   804                           ;main.c: 206:     TRISB = 0;
   805  0320  0186               	clrf	6	;volatile
   806                           
   807                           ;main.c: 207:     TRISC = 0;
   808  0321  0187               	clrf	7	;volatile
   809  0322                     l1197:	
   810                           
   811                           ;main.c: 208:     TRISCbits.TRISC5 = 0;
   812  0322  1287               	bcf	7,5	;volatile
   813  0323                     l1199:	
   814                           
   815                           ;main.c: 210:     TRISCbits.TRISC4 = 1;
   816  0323  1607               	bsf	7,4	;volatile
   817                           
   818                           ;main.c: 211:     TRISD = 0;
   819  0324  0188               	clrf	8	;volatile
   820                           
   821                           ;main.c: 212:     TRISE = 0;
   822  0325  0189               	clrf	9	;volatile
   823  0326                     l1201:	
   824                           
   825                           ;main.c: 214:     INTCONbits.GIE = 1;
   826  0326  178B               	bsf	11,7	;volatile
   827  0327                     l1203:	
   828                           
   829                           ;main.c: 215:     INTCONbits.PEIE = 1;
   830  0327  170B               	bsf	11,6	;volatile
   831  0328                     l1205:	
   832                           
   833                           ;main.c: 216:     PIE1bits.RCIE = 1;
   834  0328  168C               	bsf	12,5	;volatile
   835  0329                     l1207:	
   836                           
   837                           ;main.c: 217:     PIR1bits.SSPIF = 0;
   838  0329  1283               	bcf	3,5	;RP0=0, select bank0
   839  032A  1303               	bcf	3,6	;RP1=0, select bank0
   840  032B  118C               	bcf	12,3	;volatile
   841  032C                     l1209:	
   842                           
   843                           ;main.c: 218:     PIE1bits.SSPIE = 1;
   844  032C  1683               	bsf	3,5	;RP0=1, select bank1
   845  032D  1303               	bcf	3,6	;RP1=0, select bank1
   846  032E  158C               	bsf	12,3	;volatile
   847  032F                     l1211:	
   848                           
   849                           ;main.c: 219:     TRISAbits.TRISA5 = 1;
   850  032F  1685               	bsf	5,5	;volatile
   851  0330                     l1213:	
   852                           
   853                           ;main.c: 220:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   854  0330  1283               	bcf	3,5	;RP0=0, select bank0
   855  0331  1303               	bcf	3,6	;RP1=0, select bank0
   856  0332  01B3               	clrf	spiInit@sDataSample
   857  0333  01B4               	clrf	spiInit@sClockIdle
   858  0334  01B5               	clrf	spiInit@sTransmitEdge
   859  0335  3025               	movlw	37
   860  0336  120A  118A  233C  120A  118A  	fcall	_spiInit
   861  033B                     l245:	
   862  033B  0008               	return
   863  033C                     __end_of_setup:	
   864                           
   865                           	psect	text2
   866  033C                     __ptext2:	
   867 ;; *************** function _spiInit *****************
   868 ;; Defined at:
   869 ;;		line 12 in file "SPI.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  sType           1    wreg     enum E1264
   872 ;;  sDataSample     1    0[BANK0 ] enum E1272
   873 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   874 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  sType           1    3[BANK0 ] enum E1264
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       3       0       0       0
   887 ;;      Locals:         0       1       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         0       4       0       0       0
   890 ;;Total ram usage:        4 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_setup
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _spiInit
   902  033C                     _spiInit:	
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   906                           ;spiInit@sType stored from wreg
   907  033C  1283               	bcf	3,5	;RP0=0, select bank0
   908  033D  1303               	bcf	3,6	;RP1=0, select bank0
   909  033E  00B6               	movwf	spiInit@sType
   910  033F                     l1141:	
   911                           
   912                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   913  033F  1683               	bsf	3,5	;RP0=1, select bank1
   914  0340  1303               	bcf	3,6	;RP1=0, select bank1
   915  0341  1287               	bcf	7,5	;volatile
   916                           
   917                           ;SPI.c: 15:     if(sType & 0b00000100)
   918  0342  1283               	bcf	3,5	;RP0=0, select bank0
   919  0343  1303               	bcf	3,6	;RP1=0, select bank0
   920  0344  1D36               	btfss	spiInit@sType,2
   921  0345  2B47               	goto	u541
   922  0346  2B48               	goto	u540
   923  0347                     u541:	
   924  0347  2B4E               	goto	l1147
   925  0348                     u540:	
   926  0348                     l1143:	
   927                           
   928                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   929  0348  0835               	movf	spiInit@sTransmitEdge,w
   930  0349  1683               	bsf	3,5	;RP0=1, select bank1
   931  034A  1303               	bcf	3,6	;RP1=0, select bank1
   932  034B  0094               	movwf	20	;volatile
   933  034C                     l1145:	
   934                           
   935                           ;SPI.c: 18:         TRISC3 = 1;
   936  034C  1587               	bsf	7,3	;volatile
   937                           
   938                           ;SPI.c: 19:     }
   939  034D  2B54               	goto	l16
   940  034E                     l1147:	
   941                           
   942                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   943  034E  0833               	movf	spiInit@sDataSample,w
   944  034F  0435               	iorwf	spiInit@sTransmitEdge,w
   945  0350  1683               	bsf	3,5	;RP0=1, select bank1
   946  0351  1303               	bcf	3,6	;RP1=0, select bank1
   947  0352  0094               	movwf	20	;volatile
   948  0353                     l1149:	
   949                           
   950                           ;SPI.c: 23:         TRISC3 = 0;
   951  0353  1187               	bcf	7,3	;volatile
   952  0354                     l16:	
   953                           ;SPI.c: 24:     }
   954                           
   955                           
   956                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   957  0354  1283               	bcf	3,5	;RP0=0, select bank0
   958  0355  1303               	bcf	3,6	;RP1=0, select bank0
   959  0356  0836               	movf	spiInit@sType,w
   960  0357  0434               	iorwf	spiInit@sClockIdle,w
   961  0358  0094               	movwf	20	;volatile
   962  0359                     l17:	
   963  0359  0008               	return
   964  035A                     __end_of_spiInit:	
   965                           
   966                           	psect	text3
   967  035A                     __ptext3:	
   968 ;; *************** function _enviar_dato *****************
   969 ;; Defined at:
   970 ;;		line 58 in file "UART.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  dato            1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  dato            1    1[BANK0 ] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       1       0       0       0
   986 ;;      Temps:          0       1       0       0       0
   987 ;;      Totals:         0       2       0       0       0
   988 ;;Total ram usage:        2 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    2
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _enviar_dato
  1000  035A                     _enviar_dato:	
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _enviar_dato: [wreg]
  1004                           ;enviar_dato@dato stored from wreg
  1005  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1006  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1007  035C  00B4               	movwf	enviar_dato@dato
  1008  035D                     l1191:	
  1009  035D                     l73:	
  1010                           ;UART.c: 59:     while (TXSTAbits.TRMT == 0){}
  1011                           
  1012  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1013  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1014  035F  1C98               	btfss	24,1	;volatile
  1015  0360  2B62               	goto	u631
  1016  0361  2B63               	goto	u630
  1017  0362                     u631:	
  1018  0362  2B5D               	goto	l73
  1019  0363                     u630:	
  1020  0363                     l1193:	
  1021                           
  1022                           ;UART.c: 60:     TXREG = dato;
  1023  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0365  0834               	movf	enviar_dato@dato,w
  1026  0366  0099               	movwf	25	;volatile
  1027                           
  1028                           ;UART.c: 61:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1029  0367  30C7               	movlw	199
  1030  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1032  036A  00B3               	movwf	??_enviar_dato
  1033  036B                     u1087:	
  1034  036B  2B6C               	nop2
  1035  036C  0BB3               	decfsz	??_enviar_dato,f
  1036  036D  2B6B               	goto	u1087
  1037  036E  2B6F               	nop2
  1038  036F                     l76:	
  1039  036F  0008               	return
  1040  0370                     __end_of_enviar_dato:	
  1041                           
  1042                           	psect	text4
  1043  01FB                     __ptext4:	
  1044 ;; *************** function _USART_setup *****************
  1045 ;; Defined at:
  1046 ;;		line 14 in file "UART.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  baudrate        2    0[BANK0 ] unsigned int 
  1049 ;;  tx_enable       1    2[BANK0 ] unsigned char 
  1050 ;;  rc_enable       1    3[BANK0 ] unsigned char 
  1051 ;;  sincrono_asi    1    4[BANK0 ] unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       5       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       5       0       0       0
  1067 ;;Total ram usage:        5 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _USART_setup
  1079  01FB                     _USART_setup:	
  1080  01FB                     l1153:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _USART_setup: [wreg+status,2+status,0]
  1083                           
  1084                           
  1085                           ;UART.c: 16:     TRISCbits.TRISC7 = 1;
  1086  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1087  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1088  01FD  1787               	bsf	7,7	;volatile
  1089                           
  1090                           ;UART.c: 17:     TRISCbits.TRISC6 = 0;
  1091  01FE  1307               	bcf	7,6	;volatile
  1092                           
  1093                           ;UART.c: 19:     RCSTAbits.SPEN = 1;
  1094  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0201  1798               	bsf	24,7	;volatile
  1097  0202                     l1155:	
  1098                           
  1099                           ;UART.c: 20:     TXSTAbits.SYNC = sincrono_asincrono;
  1100  0202  0C37               	rrf	USART_setup@sincrono_asincrono,w
  1101  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0205  1C03               	skipc
  1104  0206  1218               	bcf	24,4	;volatile
  1105  0207  1803               	skipnc
  1106  0208  1618               	bsf	24,4	;volatile
  1107  0209                     l1157:	
  1108                           
  1109                           ;UART.c: 21:     PIE1bits.RCIE = 0;
  1110  0209  128C               	bcf	12,5	;volatile
  1111  020A                     l1159:	
  1112                           
  1113                           ;UART.c: 24:     if(rc_enable){
  1114  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1115  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1116  020C  0836               	movf	USART_setup@rc_enable,w
  1117  020D  1903               	btfsc	3,2
  1118  020E  2A10               	goto	u551
  1119  020F  2A11               	goto	u550
  1120  0210                     u551:	
  1121  0210  2A18               	goto	l1163
  1122  0211                     u550:	
  1123  0211                     l1161:	
  1124                           
  1125                           ;UART.c: 25:         RCSTAbits.CREN = 1;
  1126  0211  1618               	bsf	24,4	;volatile
  1127                           
  1128                           ;UART.c: 26:         PIE1bits.RCIE = 1;
  1129  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1130  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1131  0214  168C               	bsf	12,5	;volatile
  1132                           
  1133                           ;UART.c: 27:         PIR1bits.RCIF = 0;
  1134  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0217  128C               	bcf	12,5	;volatile
  1137  0218                     l1163:	
  1138                           
  1139                           ;UART.c: 29:     if(tx_enable){
  1140  0218  0835               	movf	USART_setup@tx_enable,w
  1141  0219  1903               	btfsc	3,2
  1142  021A  2A1C               	goto	u561
  1143  021B  2A1D               	goto	u560
  1144  021C                     u561:	
  1145  021C  2A20               	goto	l58
  1146  021D                     u560:	
  1147  021D                     l1165:	
  1148                           
  1149                           ;UART.c: 30:         TXSTAbits.TXEN = 1;
  1150  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1151  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1152  021F  1698               	bsf	24,5	;volatile
  1153  0220                     l58:	
  1154                           ;UART.c: 31:     }
  1155                           
  1156                           
  1157                           ;UART.c: 33:     BAUDCTLbits.BRG16 = 1;
  1158  0220  1683               	bsf	3,5	;RP0=1, select bank3
  1159  0221  1703               	bsf	3,6	;RP1=1, select bank3
  1160  0222  1587               	bsf	7,3	;volatile
  1161                           
  1162                           ;UART.c: 34:     TXSTAbits.BRGH = 0;
  1163  0223  1683               	bsf	3,5	;RP0=1, select bank1
  1164  0224  1303               	bcf	3,6	;RP1=0, select bank1
  1165  0225  1118               	bcf	24,2	;volatile
  1166  0226                     l1167:	
  1167                           
  1168                           ;UART.c: 37:     if(baudrate == 300){
  1169  0226  302C               	movlw	44
  1170  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0229  0633               	xorwf	USART_setup@baudrate,w
  1173  022A  1D03               	skipz
  1174  022B  2A30               	goto	u571
  1175  022C  0334               	decf	USART_setup@baudrate+1,w
  1176  022D  1D03               	btfss	3,2
  1177  022E  2A30               	goto	u571
  1178  022F  2A31               	goto	u570
  1179  0230                     u571:	
  1180  0230  2A38               	goto	l1171
  1181  0231                     u570:	
  1182  0231                     l1169:	
  1183                           
  1184                           ;UART.c: 38:         SPBRG = 0x40;
  1185  0231  3040               	movlw	64
  1186  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0234  0099               	movwf	25	;volatile
  1189                           
  1190                           ;UART.c: 39:         SPBRGH = 0x03;
  1191  0235  3003               	movlw	3
  1192  0236  009A               	movwf	26	;volatile
  1193                           
  1194                           ;UART.c: 40:     }
  1195  0237  2A7C               	goto	l70
  1196  0238                     l1171:	
  1197  0238  30B0               	movlw	176
  1198  0239  0633               	xorwf	USART_setup@baudrate,w
  1199  023A  3004               	movlw	4
  1200  023B  1903               	skipnz
  1201  023C  0634               	xorwf	USART_setup@baudrate+1,w
  1202  023D  1D03               	btfss	3,2
  1203  023E  2A40               	goto	u581
  1204  023F  2A41               	goto	u580
  1205  0240                     u581:	
  1206  0240  2A46               	goto	l1175
  1207  0241                     u580:	
  1208  0241                     l1173:	
  1209                           
  1210                           ;UART.c: 42:         SPBRG = 207;
  1211  0241  30CF               	movlw	207
  1212  0242  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0243  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0244  0099               	movwf	25	;volatile
  1215                           
  1216                           ;UART.c: 43:     }
  1217  0245  2A7C               	goto	l70
  1218  0246                     l1175:	
  1219  0246  3060               	movlw	96
  1220  0247  0633               	xorwf	USART_setup@baudrate,w
  1221  0248  3009               	movlw	9
  1222  0249  1903               	skipnz
  1223  024A  0634               	xorwf	USART_setup@baudrate+1,w
  1224  024B  1D03               	btfss	3,2
  1225  024C  2A4E               	goto	u591
  1226  024D  2A4F               	goto	u590
  1227  024E                     u591:	
  1228  024E  2A54               	goto	l1179
  1229  024F                     u590:	
  1230  024F                     l1177:	
  1231                           
  1232                           ;UART.c: 45:         SPBRG = 103;
  1233  024F  3067               	movlw	103
  1234  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0252  0099               	movwf	25	;volatile
  1237                           
  1238                           ;UART.c: 46:     }
  1239  0253  2A7C               	goto	l70
  1240  0254                     l1179:	
  1241  0254  3080               	movlw	128
  1242  0255  0633               	xorwf	USART_setup@baudrate,w
  1243  0256  3025               	movlw	37
  1244  0257  1903               	skipnz
  1245  0258  0634               	xorwf	USART_setup@baudrate+1,w
  1246  0259  1D03               	btfss	3,2
  1247  025A  2A5C               	goto	u601
  1248  025B  2A5D               	goto	u600
  1249  025C                     u601:	
  1250  025C  2A62               	goto	l1183
  1251  025D                     u600:	
  1252  025D                     l1181:	
  1253                           
  1254                           ;UART.c: 48:         SPBRG = 25;
  1255  025D  3019               	movlw	25
  1256  025E  1683               	bsf	3,5	;RP0=1, select bank1
  1257  025F  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0260  0099               	movwf	25	;volatile
  1259                           
  1260                           ;UART.c: 49:     }
  1261  0261  2A7C               	goto	l70
  1262  0262                     l1183:	
  1263  0262  30B1               	movlw	177
  1264  0263  0633               	xorwf	USART_setup@baudrate,w
  1265  0264  3028               	movlw	40
  1266  0265  1903               	skipnz
  1267  0266  0634               	xorwf	USART_setup@baudrate+1,w
  1268  0267  1D03               	btfss	3,2
  1269  0268  2A6A               	goto	u611
  1270  0269  2A6B               	goto	u610
  1271  026A                     u611:	
  1272  026A  2A70               	goto	l1187
  1273  026B                     u610:	
  1274  026B                     l1185:	
  1275                           
  1276                           ;UART.c: 51:         SPBRG = 23;
  1277  026B  3017               	movlw	23
  1278  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1279  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1280  026E  0099               	movwf	25	;volatile
  1281                           
  1282                           ;UART.c: 52:     }
  1283  026F  2A7C               	goto	l70
  1284  0270                     l1187:	
  1285  0270  304B               	movlw	75
  1286  0271  0634               	xorwf	USART_setup@baudrate+1,w
  1287  0272  0433               	iorwf	USART_setup@baudrate,w
  1288  0273  1D03               	btfss	3,2
  1289  0274  2A76               	goto	u621
  1290  0275  2A77               	goto	u620
  1291  0276                     u621:	
  1292  0276  2A7C               	goto	l64
  1293  0277                     u620:	
  1294  0277                     l1189:	
  1295                           
  1296                           ;UART.c: 54:         SPBRG = 12;
  1297  0277  300C               	movlw	12
  1298  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1300  027A  0099               	movwf	25	;volatile
  1301  027B  2A7C               	goto	l70
  1302  027C                     l64:	
  1303  027C                     l70:	
  1304  027C  0008               	return
  1305  027D                     __end_of_USART_setup:	
  1306                           
  1307                           	psect	text5
  1308  0030                     __ptext5:	
  1309 ;; *************** function _ISR *****************
  1310 ;; Defined at:
  1311 ;;		line 50 in file "main.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          5       0       0       0       0
  1328 ;;      Totals:         5       0       0       0       0
  1329 ;;Total ram usage:        5 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    1
  1332 ;; This function calls:
  1333 ;;		___awmod
  1334 ;;		_spiWrite
  1335 ;; This function is called by:
  1336 ;;		Interrupt level 1
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _ISR
  1342  0030                     _ISR:	
  1343  0030                     i1l1253:	
  1344                           
  1345                           ;main.c: 52:         if(PIR1bits.RCIF == 1){
  1346  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0032  1E8C               	btfss	12,5	;volatile
  1349  0033  2835               	goto	u73_21
  1350  0034  2836               	goto	u73_20
  1351  0035                     u73_21:	
  1352  0035  28F5               	goto	i1l1323
  1353  0036                     u73_20:	
  1354  0036                     i1l1255:	
  1355                           
  1356                           ;main.c: 53:             PIR1bits.RCIF = 0 ;
  1357  0036  128C               	bcf	12,5	;volatile
  1358  0037                     i1l1257:	
  1359                           
  1360                           ;main.c: 55:             if(recorre == 0){
  1361  0037  087D               	movf	_recorre,w
  1362  0038  1D03               	btfss	3,2
  1363  0039  283B               	goto	u74_21
  1364  003A  283C               	goto	u74_20
  1365  003B                     u74_21:	
  1366  003B  2841               	goto	i1l1261
  1367  003C                     u74_20:	
  1368  003C                     i1l1259:	
  1369                           
  1370                           ;main.c: 56:                 a1 = RCREG;
  1371  003C  081A               	movf	26,w	;volatile
  1372  003D  00F7               	movwf	??_ISR
  1373  003E  0877               	movf	??_ISR,w
  1374  003F  00B1               	movwf	_a1
  1375                           
  1376                           ;main.c: 58:             }else if (recorre ==1){
  1377  0040  28DA               	goto	i1l1317
  1378  0041                     i1l1261:	
  1379  0041  037D               	decf	_recorre,w
  1380  0042  1D03               	btfss	3,2
  1381  0043  2845               	goto	u75_21
  1382  0044  2846               	goto	u75_20
  1383  0045                     u75_21:	
  1384  0045  284B               	goto	i1l1265
  1385  0046                     u75_20:	
  1386  0046                     i1l1263:	
  1387                           
  1388                           ;main.c: 59:                 b1 = RCREG;
  1389  0046  081A               	movf	26,w	;volatile
  1390  0047  00F7               	movwf	??_ISR
  1391  0048  0877               	movf	??_ISR,w
  1392  0049  00B0               	movwf	_b1
  1393                           
  1394                           ;main.c: 61:             }else if (recorre ==2 ){
  1395  004A  28DA               	goto	i1l1317
  1396  004B                     i1l1265:	
  1397  004B  3002               	movlw	2
  1398  004C  067D               	xorwf	_recorre,w
  1399  004D  1D03               	btfss	3,2
  1400  004E  2850               	goto	u76_21
  1401  004F  2851               	goto	u76_20
  1402  0050                     u76_21:	
  1403  0050  2856               	goto	i1l1269
  1404  0051                     u76_20:	
  1405  0051                     i1l1267:	
  1406                           
  1407                           ;main.c: 62:                  c1 = RCREG;
  1408  0051  081A               	movf	26,w	;volatile
  1409  0052  00F7               	movwf	??_ISR
  1410  0053  0877               	movf	??_ISR,w
  1411  0054  00AF               	movwf	_c1
  1412                           
  1413                           ;main.c: 64:             }else if(recorre == 3){
  1414  0055  28DA               	goto	i1l1317
  1415  0056                     i1l1269:	
  1416  0056  3003               	movlw	3
  1417  0057  067D               	xorwf	_recorre,w
  1418  0058  1D03               	btfss	3,2
  1419  0059  285B               	goto	u77_21
  1420  005A  285C               	goto	u77_20
  1421  005B                     u77_21:	
  1422  005B  2861               	goto	i1l1273
  1423  005C                     u77_20:	
  1424  005C                     i1l1271:	
  1425                           
  1426                           ;main.c: 65:                 a2 = RCREG;
  1427  005C  081A               	movf	26,w	;volatile
  1428  005D  00F7               	movwf	??_ISR
  1429  005E  0877               	movf	??_ISR,w
  1430  005F  00AD               	movwf	_a2
  1431                           
  1432                           ;main.c: 67:             }else if (recorre == 4){
  1433  0060  28DA               	goto	i1l1317
  1434  0061                     i1l1273:	
  1435  0061  3004               	movlw	4
  1436  0062  067D               	xorwf	_recorre,w
  1437  0063  1D03               	btfss	3,2
  1438  0064  2866               	goto	u78_21
  1439  0065  2867               	goto	u78_20
  1440  0066                     u78_21:	
  1441  0066  286C               	goto	i1l1277
  1442  0067                     u78_20:	
  1443  0067                     i1l1275:	
  1444                           
  1445                           ;main.c: 68:                  b2 = RCREG;
  1446  0067  081A               	movf	26,w	;volatile
  1447  0068  00F7               	movwf	??_ISR
  1448  0069  0877               	movf	??_ISR,w
  1449  006A  00AC               	movwf	_b2
  1450                           
  1451                           ;main.c: 70:             } else if (recorre == 5){
  1452  006B  28DA               	goto	i1l1317
  1453  006C                     i1l1277:	
  1454  006C  3005               	movlw	5
  1455  006D  067D               	xorwf	_recorre,w
  1456  006E  1D03               	btfss	3,2
  1457  006F  2871               	goto	u79_21
  1458  0070  2872               	goto	u79_20
  1459  0071                     u79_21:	
  1460  0071  2877               	goto	i1l1281
  1461  0072                     u79_20:	
  1462  0072                     i1l1279:	
  1463                           
  1464                           ;main.c: 71:                 c2 = RCREG;
  1465  0072  081A               	movf	26,w	;volatile
  1466  0073  00F7               	movwf	??_ISR
  1467  0074  0877               	movf	??_ISR,w
  1468  0075  00AB               	movwf	_c2
  1469                           
  1470                           ;main.c: 73:             }else if (recorre == 6){
  1471  0076  28DA               	goto	i1l1317
  1472  0077                     i1l1281:	
  1473  0077  3006               	movlw	6
  1474  0078  067D               	xorwf	_recorre,w
  1475  0079  1D03               	btfss	3,2
  1476  007A  287C               	goto	u80_21
  1477  007B  287D               	goto	u80_20
  1478  007C                     u80_21:	
  1479  007C  2882               	goto	i1l1285
  1480  007D                     u80_20:	
  1481  007D                     i1l1283:	
  1482                           
  1483                           ;main.c: 74:                 d2 = RCREG;
  1484  007D  081A               	movf	26,w	;volatile
  1485  007E  00F7               	movwf	??_ISR
  1486  007F  0877               	movf	??_ISR,w
  1487  0080  00AA               	movwf	_d2
  1488                           
  1489                           ;main.c: 76:             }else if (recorre ==7){
  1490  0081  28DA               	goto	i1l1317
  1491  0082                     i1l1285:	
  1492  0082  3007               	movlw	7
  1493  0083  067D               	xorwf	_recorre,w
  1494  0084  1D03               	btfss	3,2
  1495  0085  2887               	goto	u81_21
  1496  0086  2888               	goto	u81_20
  1497  0087                     u81_21:	
  1498  0087  288D               	goto	i1l1289
  1499  0088                     u81_20:	
  1500  0088                     i1l1287:	
  1501                           
  1502                           ;main.c: 77:                 a3 = RCREG;
  1503  0088  081A               	movf	26,w	;volatile
  1504  0089  00F7               	movwf	??_ISR
  1505  008A  0877               	movf	??_ISR,w
  1506  008B  00A9               	movwf	_a3
  1507                           
  1508                           ;main.c: 79:             }else if (recorre == 8){
  1509  008C  28DA               	goto	i1l1317
  1510  008D                     i1l1289:	
  1511  008D  3008               	movlw	8
  1512  008E  067D               	xorwf	_recorre,w
  1513  008F  1D03               	btfss	3,2
  1514  0090  2892               	goto	u82_21
  1515  0091  2893               	goto	u82_20
  1516  0092                     u82_21:	
  1517  0092  2898               	goto	i1l1293
  1518  0093                     u82_20:	
  1519  0093                     i1l1291:	
  1520                           
  1521                           ;main.c: 80:                   b3 = RCREG;
  1522  0093  081A               	movf	26,w	;volatile
  1523  0094  00F7               	movwf	??_ISR
  1524  0095  0877               	movf	??_ISR,w
  1525  0096  00A8               	movwf	_b3
  1526                           
  1527                           ;main.c: 82:             }else if (recorre == 9){
  1528  0097  28DA               	goto	i1l1317
  1529  0098                     i1l1293:	
  1530  0098  3009               	movlw	9
  1531  0099  067D               	xorwf	_recorre,w
  1532  009A  1D03               	btfss	3,2
  1533  009B  289D               	goto	u83_21
  1534  009C  289E               	goto	u83_20
  1535  009D                     u83_21:	
  1536  009D  28A3               	goto	i1l1297
  1537  009E                     u83_20:	
  1538  009E                     i1l1295:	
  1539                           
  1540                           ;main.c: 83:                 c3 = RCREG;
  1541  009E  081A               	movf	26,w	;volatile
  1542  009F  00F7               	movwf	??_ISR
  1543  00A0  0877               	movf	??_ISR,w
  1544  00A1  00A7               	movwf	_c3
  1545                           
  1546                           ;main.c: 85:             }else if (recorre == 10){
  1547  00A2  28DA               	goto	i1l1317
  1548  00A3                     i1l1297:	
  1549  00A3  300A               	movlw	10
  1550  00A4  067D               	xorwf	_recorre,w
  1551  00A5  1D03               	btfss	3,2
  1552  00A6  28A8               	goto	u84_21
  1553  00A7  28A9               	goto	u84_20
  1554  00A8                     u84_21:	
  1555  00A8  28AE               	goto	i1l1301
  1556  00A9                     u84_20:	
  1557  00A9                     i1l1299:	
  1558                           
  1559                           ;main.c: 86:                  d3 = RCREG;
  1560  00A9  081A               	movf	26,w	;volatile
  1561  00AA  00F7               	movwf	??_ISR
  1562  00AB  0877               	movf	??_ISR,w
  1563  00AC  00A6               	movwf	_d3
  1564                           
  1565                           ;main.c: 88:             } else if(recorre == 11){
  1566  00AD  28DA               	goto	i1l1317
  1567  00AE                     i1l1301:	
  1568  00AE  300B               	movlw	11
  1569  00AF  067D               	xorwf	_recorre,w
  1570  00B0  1D03               	btfss	3,2
  1571  00B1  28B3               	goto	u85_21
  1572  00B2  28B4               	goto	u85_20
  1573  00B3                     u85_21:	
  1574  00B3  28B9               	goto	i1l1305
  1575  00B4                     u85_20:	
  1576  00B4                     i1l1303:	
  1577                           
  1578                           ;main.c: 89:                 a4 = RCREG;
  1579  00B4  081A               	movf	26,w	;volatile
  1580  00B5  00F7               	movwf	??_ISR
  1581  00B6  0877               	movf	??_ISR,w
  1582  00B7  00A5               	movwf	_a4
  1583                           
  1584                           ;main.c: 91:             } else if (recorre == 12){
  1585  00B8  28DA               	goto	i1l1317
  1586  00B9                     i1l1305:	
  1587  00B9  300C               	movlw	12
  1588  00BA  067D               	xorwf	_recorre,w
  1589  00BB  1D03               	btfss	3,2
  1590  00BC  28BE               	goto	u86_21
  1591  00BD  28BF               	goto	u86_20
  1592  00BE                     u86_21:	
  1593  00BE  28C4               	goto	i1l1309
  1594  00BF                     u86_20:	
  1595  00BF                     i1l1307:	
  1596                           
  1597                           ;main.c: 92:                 b4 = RCREG;
  1598  00BF  081A               	movf	26,w	;volatile
  1599  00C0  00F7               	movwf	??_ISR
  1600  00C1  0877               	movf	??_ISR,w
  1601  00C2  00A4               	movwf	_b4
  1602                           
  1603                           ;main.c: 94:             } else if (recorre ==13){
  1604  00C3  28DA               	goto	i1l1317
  1605  00C4                     i1l1309:	
  1606  00C4  300D               	movlw	13
  1607  00C5  067D               	xorwf	_recorre,w
  1608  00C6  1D03               	btfss	3,2
  1609  00C7  28C9               	goto	u87_21
  1610  00C8  28CA               	goto	u87_20
  1611  00C9                     u87_21:	
  1612  00C9  28CF               	goto	i1l1313
  1613  00CA                     u87_20:	
  1614  00CA                     i1l1311:	
  1615                           
  1616                           ;main.c: 95:                 c4 = RCREG;
  1617  00CA  081A               	movf	26,w	;volatile
  1618  00CB  00F7               	movwf	??_ISR
  1619  00CC  0877               	movf	??_ISR,w
  1620  00CD  00A3               	movwf	_c4
  1621                           
  1622                           ;main.c: 97:             } else if (recorre == 14){
  1623  00CE  28DA               	goto	i1l1317
  1624  00CF                     i1l1313:	
  1625  00CF  300E               	movlw	14
  1626  00D0  067D               	xorwf	_recorre,w
  1627  00D1  1D03               	btfss	3,2
  1628  00D2  28D4               	goto	u88_21
  1629  00D3  28D5               	goto	u88_20
  1630  00D4                     u88_21:	
  1631  00D4  28DA               	goto	i1l197
  1632  00D5                     u88_20:	
  1633  00D5                     i1l1315:	
  1634                           
  1635                           ;main.c: 98:                 d4 = RCREG;
  1636  00D5  081A               	movf	26,w	;volatile
  1637  00D6  00F7               	movwf	??_ISR
  1638  00D7  0877               	movf	??_ISR,w
  1639  00D8  00A2               	movwf	_d4
  1640  00D9  28DA               	goto	i1l1317
  1641  00DA                     i1l197:	
  1642  00DA                     i1l1317:	
  1643                           
  1644                           ;main.c: 101:         recorre++;
  1645  00DA  3001               	movlw	1
  1646  00DB  00F7               	movwf	??_ISR
  1647  00DC  0877               	movf	??_ISR,w
  1648  00DD  07FD               	addwf	_recorre,f
  1649  00DE                     i1l1319:	
  1650                           
  1651                           ;main.c: 102:         recorre = recorre%15;
  1652  00DE  300F               	movlw	15
  1653  00DF  00F0               	movwf	___awmod@divisor
  1654  00E0  3000               	movlw	0
  1655  00E1  00F1               	movwf	___awmod@divisor+1
  1656  00E2  087D               	movf	_recorre,w
  1657  00E3  00F7               	movwf	??_ISR
  1658  00E4  01F8               	clrf	??_ISR+1
  1659  00E5  0877               	movf	??_ISR,w
  1660  00E6  00F2               	movwf	___awmod@dividend
  1661  00E7  0878               	movf	??_ISR+1,w
  1662  00E8  00F3               	movwf	___awmod@dividend+1
  1663  00E9  120A  118A  227D  120A  118A  	fcall	___awmod
  1664  00EE  0870               	movf	?___awmod,w
  1665  00EF  00F9               	movwf	??_ISR+2
  1666  00F0  0879               	movf	??_ISR+2,w
  1667  00F1  00FD               	movwf	_recorre
  1668  00F2                     i1l1321:	
  1669                           
  1670                           ;main.c: 103:         flag = 0;
  1671  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1672  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1673  00F4  01B2               	clrf	_flag
  1674  00F5                     i1l1323:	
  1675                           
  1676                           ;main.c: 106:     if(PIR1bits.SSPIF == 1){
  1677  00F5  1D8C               	btfss	12,3	;volatile
  1678  00F6  28F8               	goto	u89_21
  1679  00F7  28F9               	goto	u89_20
  1680  00F8                     u89_21:	
  1681  00F8  29F4               	goto	i1l233
  1682  00F9                     u89_20:	
  1683  00F9                     i1l1325:	
  1684                           
  1685                           ;main.c: 108:         if(RecibeSPI == 0){
  1686  00F9  087C               	movf	_RecibeSPI,w
  1687  00FA  1D03               	btfss	3,2
  1688  00FB  28FD               	goto	u90_21
  1689  00FC  28FE               	goto	u90_20
  1690  00FD                     u90_21:	
  1691  00FD  2907               	goto	i1l1331
  1692  00FE                     u90_20:	
  1693  00FE                     i1l1327:	
  1694                           
  1695                           ;main.c: 109:             spiWrite(1);
  1696  00FE  3001               	movlw	1
  1697  00FF  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1698  0104                     i1l1329:	
  1699                           
  1700                           ;main.c: 110:             RecibeSPI = 1;
  1701  0104  01FC               	clrf	_RecibeSPI
  1702  0105  0AFC               	incf	_RecibeSPI,f
  1703                           
  1704                           ;main.c: 112:         } else if (RecibeSPI ==1){
  1705  0106  29F1               	goto	i1l1415
  1706  0107                     i1l1331:	
  1707  0107  037C               	decf	_RecibeSPI,w
  1708  0108  1D03               	btfss	3,2
  1709  0109  290B               	goto	u91_21
  1710  010A  290C               	goto	u91_20
  1711  010B                     u91_21:	
  1712  010B  2917               	goto	i1l1337
  1713  010C                     u91_20:	
  1714  010C                     i1l1333:	
  1715                           
  1716                           ;main.c: 113:             spiWrite(2);
  1717  010C  3002               	movlw	2
  1718  010D  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1719  0112                     i1l1335:	
  1720                           
  1721                           ;main.c: 114:             RecibeSPI = 2;
  1722  0112  3002               	movlw	2
  1723  0113  00F7               	movwf	??_ISR
  1724  0114  0877               	movf	??_ISR,w
  1725  0115  00FC               	movwf	_RecibeSPI
  1726                           
  1727                           ;main.c: 116:         } else if (RecibeSPI ==2){
  1728  0116  29F1               	goto	i1l1415
  1729  0117                     i1l1337:	
  1730  0117  3002               	movlw	2
  1731  0118  067C               	xorwf	_RecibeSPI,w
  1732  0119  1D03               	btfss	3,2
  1733  011A  291C               	goto	u92_21
  1734  011B  291D               	goto	u92_20
  1735  011C                     u92_21:	
  1736  011C  2928               	goto	i1l1343
  1737  011D                     u92_20:	
  1738  011D                     i1l1339:	
  1739                           
  1740                           ;main.c: 117:             spiWrite(3);
  1741  011D  3003               	movlw	3
  1742  011E  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1743  0123                     i1l1341:	
  1744                           
  1745                           ;main.c: 118:             RecibeSPI = 3;
  1746  0123  3003               	movlw	3
  1747  0124  00F7               	movwf	??_ISR
  1748  0125  0877               	movf	??_ISR,w
  1749  0126  00FC               	movwf	_RecibeSPI
  1750                           
  1751                           ;main.c: 120:         }else if (RecibeSPI ==3){
  1752  0127  29F1               	goto	i1l1415
  1753  0128                     i1l1343:	
  1754  0128  3003               	movlw	3
  1755  0129  067C               	xorwf	_RecibeSPI,w
  1756  012A  1D03               	btfss	3,2
  1757  012B  292D               	goto	u93_21
  1758  012C  292E               	goto	u93_20
  1759  012D                     u93_21:	
  1760  012D  2939               	goto	i1l1349
  1761  012E                     u93_20:	
  1762  012E                     i1l1345:	
  1763                           
  1764                           ;main.c: 121:             spiWrite(4);
  1765  012E  3004               	movlw	4
  1766  012F  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1767  0134                     i1l1347:	
  1768                           
  1769                           ;main.c: 122:             RecibeSPI = 4;
  1770  0134  3004               	movlw	4
  1771  0135  00F7               	movwf	??_ISR
  1772  0136  0877               	movf	??_ISR,w
  1773  0137  00FC               	movwf	_RecibeSPI
  1774                           
  1775                           ;main.c: 124:         }else if (RecibeSPI ==4){
  1776  0138  29F1               	goto	i1l1415
  1777  0139                     i1l1349:	
  1778  0139  3004               	movlw	4
  1779  013A  067C               	xorwf	_RecibeSPI,w
  1780  013B  1D03               	btfss	3,2
  1781  013C  293E               	goto	u94_21
  1782  013D  293F               	goto	u94_20
  1783  013E                     u94_21:	
  1784  013E  294A               	goto	i1l1355
  1785  013F                     u94_20:	
  1786  013F                     i1l1351:	
  1787                           
  1788                           ;main.c: 125:             spiWrite(5);
  1789  013F  3005               	movlw	5
  1790  0140  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1791  0145                     i1l1353:	
  1792                           
  1793                           ;main.c: 126:             RecibeSPI = 5;
  1794  0145  3005               	movlw	5
  1795  0146  00F7               	movwf	??_ISR
  1796  0147  0877               	movf	??_ISR,w
  1797  0148  00FC               	movwf	_RecibeSPI
  1798                           
  1799                           ;main.c: 128:         }else if (RecibeSPI ==5){
  1800  0149  29F1               	goto	i1l1415
  1801  014A                     i1l1355:	
  1802  014A  3005               	movlw	5
  1803  014B  067C               	xorwf	_RecibeSPI,w
  1804  014C  1D03               	btfss	3,2
  1805  014D  294F               	goto	u95_21
  1806  014E  2950               	goto	u95_20
  1807  014F                     u95_21:	
  1808  014F  295B               	goto	i1l1361
  1809  0150                     u95_20:	
  1810  0150                     i1l1357:	
  1811                           
  1812                           ;main.c: 129:             spiWrite(6);
  1813  0150  3006               	movlw	6
  1814  0151  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1815  0156                     i1l1359:	
  1816                           
  1817                           ;main.c: 130:             RecibeSPI = 6;
  1818  0156  3006               	movlw	6
  1819  0157  00F7               	movwf	??_ISR
  1820  0158  0877               	movf	??_ISR,w
  1821  0159  00FC               	movwf	_RecibeSPI
  1822                           
  1823                           ;main.c: 132:         }else if (RecibeSPI ==6){
  1824  015A  29F1               	goto	i1l1415
  1825  015B                     i1l1361:	
  1826  015B  3006               	movlw	6
  1827  015C  067C               	xorwf	_RecibeSPI,w
  1828  015D  1D03               	btfss	3,2
  1829  015E  2960               	goto	u96_21
  1830  015F  2961               	goto	u96_20
  1831  0160                     u96_21:	
  1832  0160  296C               	goto	i1l1367
  1833  0161                     u96_20:	
  1834  0161                     i1l1363:	
  1835                           
  1836                           ;main.c: 133:             spiWrite(7);
  1837  0161  3007               	movlw	7
  1838  0162  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1839  0167                     i1l1365:	
  1840                           
  1841                           ;main.c: 134:             RecibeSPI = 7;
  1842  0167  3007               	movlw	7
  1843  0168  00F7               	movwf	??_ISR
  1844  0169  0877               	movf	??_ISR,w
  1845  016A  00FC               	movwf	_RecibeSPI
  1846                           
  1847                           ;main.c: 136:         } else if(RecibeSPI == 7){
  1848  016B  29F1               	goto	i1l1415
  1849  016C                     i1l1367:	
  1850  016C  3007               	movlw	7
  1851  016D  067C               	xorwf	_RecibeSPI,w
  1852  016E  1D03               	btfss	3,2
  1853  016F  2971               	goto	u97_21
  1854  0170  2972               	goto	u97_20
  1855  0171                     u97_21:	
  1856  0171  297D               	goto	i1l1373
  1857  0172                     u97_20:	
  1858  0172                     i1l1369:	
  1859                           
  1860                           ;main.c: 137:             spiWrite(8);
  1861  0172  3008               	movlw	8
  1862  0173  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1863  0178                     i1l1371:	
  1864                           
  1865                           ;main.c: 138:             RecibeSPI = 8;
  1866  0178  3008               	movlw	8
  1867  0179  00F7               	movwf	??_ISR
  1868  017A  0877               	movf	??_ISR,w
  1869  017B  00FC               	movwf	_RecibeSPI
  1870                           
  1871                           ;main.c: 140:         } else if(RecibeSPI == 8){
  1872  017C  29F1               	goto	i1l1415
  1873  017D                     i1l1373:	
  1874  017D  3008               	movlw	8
  1875  017E  067C               	xorwf	_RecibeSPI,w
  1876  017F  1D03               	btfss	3,2
  1877  0180  2982               	goto	u98_21
  1878  0181  2983               	goto	u98_20
  1879  0182                     u98_21:	
  1880  0182  298E               	goto	i1l1379
  1881  0183                     u98_20:	
  1882  0183                     i1l1375:	
  1883                           
  1884                           ;main.c: 141:             spiWrite(8);
  1885  0183  3008               	movlw	8
  1886  0184  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1887  0189                     i1l1377:	
  1888                           
  1889                           ;main.c: 142:             RecibeSPI = 9;
  1890  0189  3009               	movlw	9
  1891  018A  00F7               	movwf	??_ISR
  1892  018B  0877               	movf	??_ISR,w
  1893  018C  00FC               	movwf	_RecibeSPI
  1894                           
  1895                           ;main.c: 144:         } else if(RecibeSPI == 9){
  1896  018D  29F1               	goto	i1l1415
  1897  018E                     i1l1379:	
  1898  018E  3009               	movlw	9
  1899  018F  067C               	xorwf	_RecibeSPI,w
  1900  0190  1D03               	btfss	3,2
  1901  0191  2993               	goto	u99_21
  1902  0192  2994               	goto	u99_20
  1903  0193                     u99_21:	
  1904  0193  299F               	goto	i1l1385
  1905  0194                     u99_20:	
  1906  0194                     i1l1381:	
  1907                           
  1908                           ;main.c: 145:             spiWrite(10);
  1909  0194  300A               	movlw	10
  1910  0195  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1911  019A                     i1l1383:	
  1912                           
  1913                           ;main.c: 146:             RecibeSPI = 10;
  1914  019A  300A               	movlw	10
  1915  019B  00F7               	movwf	??_ISR
  1916  019C  0877               	movf	??_ISR,w
  1917  019D  00FC               	movwf	_RecibeSPI
  1918                           
  1919                           ;main.c: 148:         } else if(RecibeSPI == 10){
  1920  019E  29F1               	goto	i1l1415
  1921  019F                     i1l1385:	
  1922  019F  300A               	movlw	10
  1923  01A0  067C               	xorwf	_RecibeSPI,w
  1924  01A1  1D03               	btfss	3,2
  1925  01A2  29A4               	goto	u100_21
  1926  01A3  29A5               	goto	u100_20
  1927  01A4                     u100_21:	
  1928  01A4  29B0               	goto	i1l1391
  1929  01A5                     u100_20:	
  1930  01A5                     i1l1387:	
  1931                           
  1932                           ;main.c: 149:             spiWrite(11);
  1933  01A5  300B               	movlw	11
  1934  01A6  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1935  01AB                     i1l1389:	
  1936                           
  1937                           ;main.c: 150:             RecibeSPI = 11;
  1938  01AB  300B               	movlw	11
  1939  01AC  00F7               	movwf	??_ISR
  1940  01AD  0877               	movf	??_ISR,w
  1941  01AE  00FC               	movwf	_RecibeSPI
  1942                           
  1943                           ;main.c: 152:         } else if(RecibeSPI == 11){
  1944  01AF  29F1               	goto	i1l1415
  1945  01B0                     i1l1391:	
  1946  01B0  300B               	movlw	11
  1947  01B1  067C               	xorwf	_RecibeSPI,w
  1948  01B2  1D03               	btfss	3,2
  1949  01B3  29B5               	goto	u101_21
  1950  01B4  29B6               	goto	u101_20
  1951  01B5                     u101_21:	
  1952  01B5  29C1               	goto	i1l1397
  1953  01B6                     u101_20:	
  1954  01B6                     i1l1393:	
  1955                           
  1956                           ;main.c: 153:             spiWrite(12);
  1957  01B6  300C               	movlw	12
  1958  01B7  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1959  01BC                     i1l1395:	
  1960                           
  1961                           ;main.c: 154:             RecibeSPI = 12;
  1962  01BC  300C               	movlw	12
  1963  01BD  00F7               	movwf	??_ISR
  1964  01BE  0877               	movf	??_ISR,w
  1965  01BF  00FC               	movwf	_RecibeSPI
  1966                           
  1967                           ;main.c: 156:         } else if(RecibeSPI == 12){
  1968  01C0  29F1               	goto	i1l1415
  1969  01C1                     i1l1397:	
  1970  01C1  300C               	movlw	12
  1971  01C2  067C               	xorwf	_RecibeSPI,w
  1972  01C3  1D03               	btfss	3,2
  1973  01C4  29C6               	goto	u102_21
  1974  01C5  29C7               	goto	u102_20
  1975  01C6                     u102_21:	
  1976  01C6  29D2               	goto	i1l1403
  1977  01C7                     u102_20:	
  1978  01C7                     i1l1399:	
  1979                           
  1980                           ;main.c: 157:             spiWrite(13);
  1981  01C7  300D               	movlw	13
  1982  01C8  120A  118A  2378  120A  118A  	fcall	_spiWrite
  1983  01CD                     i1l1401:	
  1984                           
  1985                           ;main.c: 158:             RecibeSPI = 13;
  1986  01CD  300D               	movlw	13
  1987  01CE  00F7               	movwf	??_ISR
  1988  01CF  0877               	movf	??_ISR,w
  1989  01D0  00FC               	movwf	_RecibeSPI
  1990                           
  1991                           ;main.c: 160:         } else if(RecibeSPI == 13){
  1992  01D1  29F1               	goto	i1l1415
  1993  01D2                     i1l1403:	
  1994  01D2  300D               	movlw	13
  1995  01D3  067C               	xorwf	_RecibeSPI,w
  1996  01D4  1D03               	btfss	3,2
  1997  01D5  29D7               	goto	u103_21
  1998  01D6  29D8               	goto	u103_20
  1999  01D7                     u103_21:	
  2000  01D7  29E3               	goto	i1l1409
  2001  01D8                     u103_20:	
  2002  01D8                     i1l1405:	
  2003                           
  2004                           ;main.c: 161:             spiWrite(14);
  2005  01D8  300E               	movlw	14
  2006  01D9  120A  118A  2378  120A  118A  	fcall	_spiWrite
  2007  01DE                     i1l1407:	
  2008                           
  2009                           ;main.c: 162:             RecibeSPI = 14;
  2010  01DE  300E               	movlw	14
  2011  01DF  00F7               	movwf	??_ISR
  2012  01E0  0877               	movf	??_ISR,w
  2013  01E1  00FC               	movwf	_RecibeSPI
  2014                           
  2015                           ;main.c: 164:         } else if(RecibeSPI == 14){
  2016  01E2  29F1               	goto	i1l1415
  2017  01E3                     i1l1409:	
  2018  01E3  300E               	movlw	14
  2019  01E4  067C               	xorwf	_RecibeSPI,w
  2020  01E5  1D03               	btfss	3,2
  2021  01E6  29E8               	goto	u104_21
  2022  01E7  29E9               	goto	u104_20
  2023  01E8                     u104_21:	
  2024  01E8  29F1               	goto	i1l227
  2025  01E9                     u104_20:	
  2026  01E9                     i1l1411:	
  2027                           
  2028                           ;main.c: 165:             spiWrite(15);
  2029  01E9  300F               	movlw	15
  2030  01EA  120A  118A  2378  120A  118A  	fcall	_spiWrite
  2031  01EF                     i1l1413:	
  2032                           
  2033                           ;main.c: 166:             RecibeSPI = 0;
  2034  01EF  01FC               	clrf	_RecibeSPI
  2035  01F0  29F1               	goto	i1l1415
  2036  01F1                     i1l227:	
  2037  01F1                     i1l1415:	
  2038                           
  2039                           ;main.c: 169:         PIR1bits.SSPIF = 0;
  2040  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2041  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2042  01F3  118C               	bcf	12,3	;volatile
  2043  01F4                     i1l233:	
  2044  01F4  087B               	movf	??_ISR+4,w
  2045  01F5  008A               	movwf	10
  2046  01F6  0E7A               	swapf	(??_ISR+3)^(0+4294967168),w
  2047  01F7  0083               	movwf	3
  2048  01F8  0EFE               	swapf	btemp,f
  2049  01F9  0E7E               	swapf	btemp,w
  2050  01FA  0009               	retfie
  2051  01FB                     __end_of_ISR:	
  2052                           
  2053                           	psect	intentry
  2054  0004                     __pintentry:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2057                           
  2058  0004                     interrupt_function:	
  2059  007E                     saved_w	set	btemp
  2060  0004  00FE               	movwf	btemp
  2061  0005  0E03               	swapf	3,w
  2062  0006  00FA               	movwf	??_ISR+3
  2063  0007  080A               	movf	10,w
  2064  0008  00FB               	movwf	??_ISR+4
  2065  0009  120A  118A  2830   	ljmp	_ISR
  2066                           
  2067                           	psect	text6
  2068  0378                     __ptext6:	
  2069 ;; *************** function _spiWrite *****************
  2070 ;; Defined at:
  2071 ;;		line 34 in file "SPI.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  dat             1    wreg     unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  dat             1    0[COMMON] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         1       0       0       0       0
  2089 ;;Total ram usage:        1 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_ISR
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _spiWrite
  2100  0378                     _spiWrite:	
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _spiWrite: [wreg]
  2104                           ;spiWrite@dat stored from wreg
  2105  0378  00F0               	movwf	spiWrite@dat
  2106  0379                     i1l1151:	
  2107                           
  2108                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2109  0379  0870               	movf	spiWrite@dat,w
  2110  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2111  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2112  037C  0093               	movwf	19	;volatile
  2113  037D                     i1l26:	
  2114  037D  0008               	return
  2115  037E                     __end_of_spiWrite:	
  2116                           
  2117                           	psect	text7
  2118  027D                     __ptext7:	
  2119 ;; *************** function ___awmod *****************
  2120 ;; Defined at:
  2121 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  divisor         2    0[COMMON] int 
  2124 ;;  dividend        2    2[COMMON] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  sign            1    6[COMMON] unsigned char 
  2127 ;;  counter         1    5[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    0[COMMON] int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         4       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0
  2140 ;;      Totals:         7       0       0       0       0
  2141 ;;Total ram usage:        7 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_ISR
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function ___awmod
  2152  027D                     ___awmod:	
  2153  027D                     i1l1215:	
  2154                           ;incstack = 0
  2155                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2156                           
  2157  027D  01F6               	clrf	___awmod@sign
  2158  027E                     i1l1217:	
  2159  027E  1FF3               	btfss	___awmod@dividend+1,7
  2160  027F  2A81               	goto	u64_21
  2161  0280  2A82               	goto	u64_20
  2162  0281                     u64_21:	
  2163  0281  2A89               	goto	i1l1223
  2164  0282                     u64_20:	
  2165  0282                     i1l1219:	
  2166  0282  09F2               	comf	___awmod@dividend,f
  2167  0283  09F3               	comf	___awmod@dividend+1,f
  2168  0284  0AF2               	incf	___awmod@dividend,f
  2169  0285  1903               	skipnz
  2170  0286  0AF3               	incf	___awmod@dividend+1,f
  2171  0287                     i1l1221:	
  2172  0287  01F6               	clrf	___awmod@sign
  2173  0288  0AF6               	incf	___awmod@sign,f
  2174  0289                     i1l1223:	
  2175  0289  1FF1               	btfss	___awmod@divisor+1,7
  2176  028A  2A8C               	goto	u65_21
  2177  028B  2A8D               	goto	u65_20
  2178  028C                     u65_21:	
  2179  028C  2A92               	goto	i1l1227
  2180  028D                     u65_20:	
  2181  028D                     i1l1225:	
  2182  028D  09F0               	comf	___awmod@divisor,f
  2183  028E  09F1               	comf	___awmod@divisor+1,f
  2184  028F  0AF0               	incf	___awmod@divisor,f
  2185  0290  1903               	skipnz
  2186  0291  0AF1               	incf	___awmod@divisor+1,f
  2187  0292                     i1l1227:	
  2188  0292  0870               	movf	___awmod@divisor,w
  2189  0293  0471               	iorwf	___awmod@divisor+1,w
  2190  0294  1903               	btfsc	3,2
  2191  0295  2A97               	goto	u66_21
  2192  0296  2A98               	goto	u66_20
  2193  0297                     u66_21:	
  2194  0297  2AC7               	goto	i1l1245
  2195  0298                     u66_20:	
  2196  0298                     i1l1229:	
  2197  0298  01F5               	clrf	___awmod@counter
  2198  0299  0AF5               	incf	___awmod@counter,f
  2199  029A  2AA6               	goto	i1l1235
  2200  029B                     i1l1231:	
  2201  029B  3001               	movlw	1
  2202  029C                     u67_25:	
  2203  029C  1003               	clrc
  2204  029D  0DF0               	rlf	___awmod@divisor,f
  2205  029E  0DF1               	rlf	___awmod@divisor+1,f
  2206  029F  3EFF               	addlw	-1
  2207  02A0  1D03               	skipz
  2208  02A1  2A9C               	goto	u67_25
  2209  02A2                     i1l1233:	
  2210  02A2  3001               	movlw	1
  2211  02A3  00F4               	movwf	??___awmod
  2212  02A4  0874               	movf	??___awmod,w
  2213  02A5  07F5               	addwf	___awmod@counter,f
  2214  02A6                     i1l1235:	
  2215  02A6  1FF1               	btfss	___awmod@divisor+1,7
  2216  02A7  2AA9               	goto	u68_21
  2217  02A8  2AAA               	goto	u68_20
  2218  02A9                     u68_21:	
  2219  02A9  2A9B               	goto	i1l1231
  2220  02AA                     u68_20:	
  2221  02AA                     i1l1237:	
  2222  02AA  0871               	movf	___awmod@divisor+1,w
  2223  02AB  0273               	subwf	___awmod@dividend+1,w
  2224  02AC  1D03               	skipz
  2225  02AD  2AB0               	goto	u69_25
  2226  02AE  0870               	movf	___awmod@divisor,w
  2227  02AF  0272               	subwf	___awmod@dividend,w
  2228  02B0                     u69_25:	
  2229  02B0  1C03               	skipc
  2230  02B1  2AB3               	goto	u69_21
  2231  02B2  2AB4               	goto	u69_20
  2232  02B3                     u69_21:	
  2233  02B3  2ABA               	goto	i1l1241
  2234  02B4                     u69_20:	
  2235  02B4                     i1l1239:	
  2236  02B4  0870               	movf	___awmod@divisor,w
  2237  02B5  02F2               	subwf	___awmod@dividend,f
  2238  02B6  0871               	movf	___awmod@divisor+1,w
  2239  02B7  1C03               	skipc
  2240  02B8  03F3               	decf	___awmod@dividend+1,f
  2241  02B9  02F3               	subwf	___awmod@dividend+1,f
  2242  02BA                     i1l1241:	
  2243  02BA  3001               	movlw	1
  2244  02BB                     u70_25:	
  2245  02BB  1003               	clrc
  2246  02BC  0CF1               	rrf	___awmod@divisor+1,f
  2247  02BD  0CF0               	rrf	___awmod@divisor,f
  2248  02BE  3EFF               	addlw	-1
  2249  02BF  1D03               	skipz
  2250  02C0  2ABB               	goto	u70_25
  2251  02C1                     i1l1243:	
  2252  02C1  3001               	movlw	1
  2253  02C2  02F5               	subwf	___awmod@counter,f
  2254  02C3  1D03               	btfss	3,2
  2255  02C4  2AC6               	goto	u71_21
  2256  02C5  2AC7               	goto	u71_20
  2257  02C6                     u71_21:	
  2258  02C6  2AAA               	goto	i1l1237
  2259  02C7                     u71_20:	
  2260  02C7                     i1l1245:	
  2261  02C7  0876               	movf	___awmod@sign,w
  2262  02C8  1903               	btfsc	3,2
  2263  02C9  2ACB               	goto	u72_21
  2264  02CA  2ACC               	goto	u72_20
  2265  02CB                     u72_21:	
  2266  02CB  2AD1               	goto	i1l1249
  2267  02CC                     u72_20:	
  2268  02CC                     i1l1247:	
  2269  02CC  09F2               	comf	___awmod@dividend,f
  2270  02CD  09F3               	comf	___awmod@dividend+1,f
  2271  02CE  0AF2               	incf	___awmod@dividend,f
  2272  02CF  1903               	skipnz
  2273  02D0  0AF3               	incf	___awmod@dividend+1,f
  2274  02D1                     i1l1249:	
  2275  02D1  0873               	movf	___awmod@dividend+1,w
  2276  02D2  00F1               	movwf	?___awmod+1
  2277  02D3  0872               	movf	___awmod@dividend,w
  2278  02D4  00F0               	movwf	?___awmod
  2279  02D5                     i1l497:	
  2280  02D5  0008               	return
  2281  02D6                     __end_of___awmod:	
  2282  007E                     btemp	set	126	;btemp
  2283  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      7      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    _main->_USART_setup
    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     884
                                              5 BANK0      2     2      0
                        _USART_setup
                        _enviar_dato
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _enviar_dato                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USART_setup                                          5     0      5     502
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0     470
                                              7 COMMON     5     5      0
                            ___awmod
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_setup
   _enviar_dato
   _setup
     _spiInit

 _ISR (ROOT)
   ___awmod
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      1D       5       36.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 18:58:23 2020

                  _USART_setup 01FB                    __CFG_CP$OFF 0000                    _SSPSTATbits 0094  
                           l16 0354                             l17 0359                             l70 027C  
                           l64 027C                             l73 035D                             l58 0220  
                           l76 036F                             _a1 0031                             _a2 002D  
                           _b1 0030                             _a3 0029                             _b2 002C  
                           _a4 0025                             _c1 002F                             _b3 0028  
                           _c2 002B                             _b4 0024                             _d1 002E  
                           _c3 0027                             _d2 002A                             _c4 0023  
                           _d3 0026                             _d4 0022                             fsr 0004  
                          l245 033B                            u600 025D                            u601 025C  
                          u610 026B                   __CFG_CPD$OFF 0000                            u611 026A  
                          u620 0277                            u540 0348                            _ISR 0030  
                          u621 0276                            u541 0347                            u550 0211  
                          u630 0363                            u551 0210                            u631 0362  
                          u560 021D                            u561 021C                            u570 0231  
                          u571 0230                            u580 0241                            u581 0240  
                          u590 024F                            u591 024E                            indf 0000  
                 ___awmod@sign 0076                   __CFG_LVP$OFF 0000                           ?_ISR 0070  
                         l1201 0326                           l1211 032F                           l1203 0327  
                         l1141 033F                           l1213 0330                           l1205 0328  
                         l1143 0348                           l1207 0329                           l1161 0211  
                         l1153 01FB                           l1145 034C                           l1209 032C  
                         l1171 0238                           l1163 0218                           l1155 0202  
                         l1147 034E                           l1181 025D                           l1173 0241  
                         l1165 021D                           l1157 0209                           l1149 0353  
                         l1421 02F5                           l1183 0262                           l1175 0246  
                         l1167 0226                           l1159 020A                           l1191 035D  
                         l1423 02FC                           l1185 026B                           l1177 024F  
                         l1169 0231                           l1193 0363                           l1425 0302  
                         l1417 02D6                           l1187 0270                           l1179 0254  
                         l1195 0316                           l1427 0306                           l1419 02EB  
                         l1189 0277                           l1197 0322                           l1429 0308  
                         l1199 0323                           _ADC1 003B                           _ADC2 003A  
                         u1050 02FC                           u1051 02FB                           u1067 02F1  
                         u1077 030E                           u1087 036B                           i1l26 037D  
                 __CFG_WRT$OFF 0000                           _flag 0032                           _main 02D6  
                         btemp 007E                   ?_enviar_dato 0070                           start 000C  
                __CFG_IESO$OFF 0000                          ??_ISR 0077                          ?_main 0070  
                __CFG_WDTE$OFF 0000                __end_of___awmod 02D6                          i1l233 01F4  
                        i1l227 01F1                          i1l197 00DA                          i1l497 02D5  
                        _RCREG 001A                          _SPBRG 0099                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _PORTD 0008  
                        _PORTE 0009                          u70_25 02BB                          u71_20 02C7  
                        u71_21 02C6                          u72_20 02CC                          u64_20 0282  
                        u80_20 007D                          u72_21 02CB                          u64_21 0281  
                        u80_21 007C                          u65_20 028D                          u81_20 0088  
                        u73_20 0036                          u65_21 028C                          u81_21 0087  
                        u73_21 0035                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
                        u66_20 0298                          u90_20 00FE                          u82_20 0093  
                        u74_20 003C                          u66_21 0297                          u90_21 00FD  
                        u82_21 0092                          u74_21 003B                          u91_20 010C  
                        u83_20 009E                          u75_20 0046                          u91_21 010B  
                        u83_21 009D                          u75_21 0045                          u67_25 029C  
                        u68_20 02AA                          u92_20 011D                          u84_20 00A9  
                        u76_20 0051                          u68_21 02A9                          u92_21 011C  
                        u84_21 00A8                          u76_21 0050                          u69_20 02B4  
                        u93_20 012E                          u85_20 00B4                          u77_20 005C  
                        u69_21 02B3                          u93_21 012D                          u85_21 00B3  
                        u77_21 005B                          u69_25 02B0                          u94_20 013F  
                        u86_20 00BF                          u78_20 0067                          u94_21 013E  
                        u86_21 00BE                          u78_21 0066                          u95_20 0150  
                        u87_20 00CA                          u79_20 0072                          u95_21 014F  
                        u87_21 00C9                          u79_21 0071                          u96_20 0161  
                        u88_20 00D5                          u96_21 0160                          u88_21 00D4  
                        u97_20 0172                          u89_20 00F9                          u97_21 0171  
                        u89_21 00F8                          _TXREG 0019                          u98_20 0183  
                        u98_21 0182                          u99_20 0194                          u99_21 0193  
               __CFG_FCMEN$OFF 0000                          _setup 0316                 __CFG_BOREN$OFF 0000  
                        pclath 000A                __end_of_spiInit 035A                          status 0003  
                        wtemp0 007E                 __CFG_MCLRE$OFF 0000                __initialization 000F  
                 __end_of_main 0316                         ??_main 0038                         ?_setup 0070  
                       u100_20 01A5                         u100_21 01A4                         u101_20 01B6  
                       u101_21 01B5                         u102_20 01C7                         u102_21 01C6  
                       i1l1221 0287                         i1l1301 00AE                         i1l1231 029B  
                       i1l1223 0289                         i1l1215 027D                         i1l1151 0379  
                       i1l1311 00CA                         i1l1303 00B4                         u103_20 01D8  
                       i1l1241 02BA                         i1l1233 02A2                         i1l1225 028D  
                       i1l1217 027E                         u103_21 01D7                         i1l1401 01CD  
                       i1l1321 00F2                         i1l1313 00CF                         i1l1305 00B9  
                       i1l1243 02C1                         i1l1235 02A6                         i1l1227 0292  
                       i1l1219 0282                         i1l1411 01E9                         i1l1403 01D2  
                       i1l1331 0107                         i1l1315 00D5                         i1l1307 00BF  
                       i1l1323 00F5                         i1l1237 02AA                         i1l1229 0298  
                       i1l1245 02C7                         i1l1413 01EF                         i1l1405 01D8  
                       i1l1341 0123                         i1l1333 010C                         i1l1325 00F9  
                       i1l1309 00C4                         i1l1317 00DA                         i1l1261 0041  
                       i1l1253 0030                         i1l1247 02CC                         i1l1239 02B4  
                       i1l1407 01DE                         i1l1351 013F                         i1l1343 0128  
                       i1l1335 0112                         i1l1415 01F1                         i1l1327 00FE  
                       i1l1319 00DE                         i1l1271 005C                         i1l1263 0046  
                       i1l1255 0036                         u104_20 01E9                         i1l1249 02D1  
                       u104_21 01E8                         i1l1409 01E3                         i1l1361 015B  
                       i1l1353 0145                         i1l1345 012E                         i1l1337 0117  
                       i1l1329 0104                         i1l1281 0077                         i1l1273 0061  
                       i1l1265 004B                         i1l1257 0037                         i1l1371 0178  
                       i1l1363 0161                         i1l1355 014A                         i1l1347 0134  
                       i1l1339 011D                         i1l1291 0093                         i1l1283 007D  
                       i1l1275 0067                         i1l1267 0051                         i1l1259 003C  
                       i1l1381 0194                         i1l1373 017D                         i1l1365 0167  
                       i1l1357 0150                         i1l1349 0139                         i1l1293 0098  
                       i1l1285 0082                         i1l1277 006C                         i1l1269 0056  
                       i1l1391 01B0                         i1l1383 019A                         i1l1375 0183  
                       i1l1367 016C                         i1l1359 0156                         i1l1295 009E  
                       i1l1287 0088                         i1l1279 0072                         i1l1393 01B6  
                       i1l1385 019F                         i1l1377 0189                         i1l1369 0172  
                       i1l1297 00A3                         i1l1289 008D                         i1l1395 01BC  
                       i1l1387 01A5                         i1l1379 018E                         i1l1299 00A9  
                       i1l1397 01C1                         i1l1389 01AB                         i1l1399 01C7  
                       _SPBRGH 009A                         _TRISC3 043B                         _TRISC5 043D  
                       _SSPCON 0014                         _SSPBUF 0013                 __CFG_PWRTE$OFF 0000  
                    ??___awmod 0074                         _estado 003C                ___awmod@divisor 0070  
              ___awmod@counter 0075                         saved_w 007E               __end_of_spiWrite 037E  
                    ??_spiInit 0036            USART_setup@baudrate 0033        __end_of__initialization 002C  
         __size_of_enviar_dato 0016                 __pcstackCOMMON 0070                   ?_USART_setup 0033  
                 __pidataBANK0 037E                  __end_of_setup 033C                        ??_setup 0037  
                   __pbssBANK0 0020                     __pmaintext 02D6                     __pintentry 0004  
                      _SSPSTAT 0094                        _Heechan 0021                      ?_spiWrite 0070  
                      ___awmod 027D                        __ptext1 0316                        __ptext2 033C  
                      __ptext3 035A                        __ptext4 01FB                        __ptext5 0030  
                      __ptext6 0378                        __ptext7 027D                   __size_of_ISR 01CB  
             ___awmod@dividend 0072                        _recorre 007D  USART_setup@sincrono_asincrono 0037  
                      _spiInit 033C                        clrloop0 0371           end_of_initialization 002C  
              enviar_dato@dato 0034                      _RCSTAbits 0018                     ??_spiWrite 0070  
         __size_of_USART_setup 0082                      _TRISAbits 0085                      _TRISCbits 0087  
                  spiWrite@dat 0070           USART_setup@rc_enable 0036                      _TXSTAbits 0098  
                  _BAUDCTLbits 0187            start_initialization 000F                    __end_of_ISR 01FB  
         USART_setup@tx_enable 0035                      _RecibeSPI 007C                  ??_enviar_dato 0033  
     __CFG_FOSC$INTRC_NOCLKOUT 0000                    __pdataBANK0 003A                    __pbssCOMMON 007C  
                    ___latbits 0002                  __pcstackBANK0 0033                       ?___awmod 0070  
          __end_of_enviar_dato 0370              __size_of_spiWrite 0006                       ?_spiInit 0033  
               __size_of_setup 0026           spiInit@sTransmitEdge 0035              interrupt_function 0004  
                    clear_ram0 0370                       _PIE1bits 008C             spiInit@sDataSample 0033  
                     _PIR1bits 000C                    _enviar_dato 035A                  ??_USART_setup 0038  
             __size_of___awmod 0059               __size_of_spiInit 001E              __CFG_BOR4V$BOR40V 0000  
                     _contador 0020                  __size_of_main 0040                       _spiWrite 0378  
                 spiInit@sType 0036              spiInit@sClockIdle 0034            __end_of_USART_setup 027D  
                   _INTCONbits 000B                       intlevel1 0000  
