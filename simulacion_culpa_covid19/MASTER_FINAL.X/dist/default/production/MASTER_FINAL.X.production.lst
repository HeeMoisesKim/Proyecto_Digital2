

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 18:37:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  041D                     __pidataBANK0:	
   376                           
   377                           ;initializer for _espera4
   378  041D  3403               	retlw	3
   379  041E  3400               	retlw	0
   380                           
   381                           ;initializer for _espera3
   382  041F  3402               	retlw	2
   383  0420  3400               	retlw	0
   384                           
   385                           ;initializer for _espera2
   386  0421  3401               	retlw	1
   387  0422  3400               	retlw	0
   388                           
   389                           ;initializer for _ADC2
   390  0423  3404               	retlw	4
   391                           
   392                           ;initializer for _ADC1
   393  0424  3405               	retlw	5
   394                           
   395                           ;initializer for _estado
   396  0425  3401               	retlw	1
   397  0014                     _SSPCON	set	20
   398  0005                     _PORTA	set	5
   399  0013                     _SSPBUF	set	19
   400  000C                     _PIR1bits	set	12
   401  0006                     _PORTB	set	6
   402  0008                     _PORTDbits	set	8
   403  0094                     _SSPSTATbits	set	148
   404  0094                     _SSPSTAT	set	148
   405  008C                     _PIE1bits	set	140
   406  0085                     _TRISA	set	133
   407  0088                     _TRISD	set	136
   408  0086                     _TRISB	set	134
   409  043B                     _TRISC3	set	1083
   410  043D                     _TRISC5	set	1085
   411  0189                     _ANSELH	set	393
   412                           
   413                           	psect	strings
   414  032E                     __pstrings:	
   415  032E                     stringtab:	
   416  032E                     __stringtab:	
   417  032E                     stringcode:	
   418                           ;	String table - string pointers are 1 byte each
   419                           
   420  032E                     stringdir:	
   421  032E  3003               	movlw	high stringdir
   422  032F  008A               	movwf	10
   423  0330  0804               	movf	4,w
   424  0331  0A84               	incf	4,f
   425  0332  0782               	addwf	2,f
   426  0333                     __stringbase:	
   427  0333  3400               	retlw	0
   428  0334                     __end_of__stringtab:	
   429  0334                     STR_1:	
   430  0334  3454               	retlw	84	;'T'
   431  0335  3465               	retlw	101	;'e'
   432  0336  346D               	retlw	109	;'m'
   433  0337  3470               	retlw	112	;'p'
   434  0338  3465               	retlw	101	;'e'
   435  0339  3472               	retlw	114	;'r'
   436  033A  3461               	retlw	97	;'a'
   437  033B  3474               	retlw	116	;'t'
   438  033C  3475               	retlw	117	;'u'
   439  033D  3472               	retlw	114	;'r'
   440  033E  3461               	retlw	97	;'a'
   441  033F  343A               	retlw	58	;':'
   442  0340  3400               	retlw	0
   443  0341                     STR_8:	
   444  0341  3444               	retlw	68	;'D'
   445  0342  3469               	retlw	105	;'i'
   446  0343  3473               	retlw	115	;'s'
   447  0344  3474               	retlw	116	;'t'
   448  0345  3461               	retlw	97	;'a'
   449  0346  346E               	retlw	110	;'n'
   450  0347  3463               	retlw	99	;'c'
   451  0348  3469               	retlw	105	;'i'
   452  0349  3461               	retlw	97	;'a'
   453  034A  343A               	retlw	58	;':'
   454  034B  3400               	retlw	0
   455  034C                     STR_6:	
   456  034C  3443               	retlw	67	;'C'
   457  034D  3461               	retlw	97	;'a'
   458  034E  3475               	retlw	117	;'u'
   459  034F  3464               	retlw	100	;'d'
   460  0350  3461               	retlw	97	;'a'
   461  0351  346C               	retlw	108	;'l'
   462  0352  343A               	retlw	58	;':'
   463  0353  3400               	retlw	0
   464  0354                     STR_4:	
   465  0354  3450               	retlw	80	;'P'
   466  0355  3465               	retlw	101	;'e'
   467  0356  3473               	retlw	115	;'s'
   468  0357  346F               	retlw	111	;'o'
   469  0358  343A               	retlw	58	;':'
   470  0359  3400               	retlw	0
   471  035A                     STR_5:	
   472  035A  346B               	retlw	107	;'k'
   473  035B  3467               	retlw	103	;'g'
   474  035C  3400               	retlw	0
   475  035D                     STR_2:	
   476  035D  342E               	retlw	46	;'.'
   477  035E  3400               	retlw	0
   478  035F                     STR_3:	
   479  035F  3443               	retlw	67	;'C'
   480  0360  3400               	retlw	0
   481  0361                     STR_10:	
   482  0361  346D               	retlw	109	;'m'
   483  0362  3400               	retlw	0
   484  035D                     
   485                           ; #config settings
   486  0000                     
   487                           	psect	cinit
   488  000F                     start_initialization:	
   489  000F                     __initialization:	
   490                           
   491                           ; Initialize objects allocated to BANK0
   492  000F  1383               	bcf	3,7	;select IRP bank0
   493  0010  3039               	movlw	low (__pdataBANK0+9)
   494  0011  00FD               	movwf	btemp+-1
   495  0012  3004               	movlw	high __pidataBANK0
   496  0013  00FE               	movwf	btemp
   497  0014  301D               	movlw	low __pidataBANK0
   498  0015  00FF               	movwf	btemp+1
   499  0016  3030               	movlw	low __pdataBANK0
   500  0017  0084               	movwf	4
   501  0018  120A  118A  240E  120A  118A  	fcall	init_ram0
   502                           
   503                           ; Clear objects allocated to BANK0
   504  001D  3020               	movlw	low __pbssBANK0
   505  001E  0084               	movwf	4
   506  001F  3030               	movlw	low (__pbssBANK0+16)
   507  0020  120A  118A  2426  120A  118A  	fcall	clear_ram0
   508                           
   509                           ; Clear objects allocated to COMMON
   510  0025  01F9               	clrf	__pbssCOMMON& (0+127)
   511  0026  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   512  0027  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   513  0028                     end_of_initialization:	
   514                           ;End of C runtime variable initialization code
   515                           
   516  0028                     __end_of__initialization:	
   517  0028  0183               	clrf	3
   518  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   519                           
   520                           	psect	bssCOMMON
   521  0079                     __pbssCOMMON:	
   522  0079                     _recorre:	
   523  0079                     	ds	1
   524  007A                     _a1:	
   525  007A                     	ds	1
   526  007B                     _a4:	
   527  007B                     	ds	1
   528                           
   529                           	psect	bssBANK0
   530  0020                     __pbssBANK0:	
   531  0020                     _espera1:	
   532  0020                     	ds	2
   533  0022                     _c1:	
   534  0022                     	ds	1
   535  0023                     _b1:	
   536  0023                     	ds	1
   537  0024                     _d3:	
   538  0024                     	ds	1
   539  0025                     _c3:	
   540  0025                     	ds	1
   541  0026                     _b3:	
   542  0026                     	ds	1
   543  0027                     _a3:	
   544  0027                     	ds	1
   545  0028                     _d2:	
   546  0028                     	ds	1
   547  0029                     _c2:	
   548  0029                     	ds	1
   549  002A                     _b2:	
   550  002A                     	ds	1
   551  002B                     _a2:	
   552  002B                     	ds	1
   553  002C                     _d4:	
   554  002C                     	ds	1
   555  002D                     _c4:	
   556  002D                     	ds	1
   557  002E                     _b4:	
   558  002E                     	ds	1
   559  002F                     _contador:	
   560  002F                     	ds	1
   561                           
   562                           	psect	dataBANK0
   563  0030                     __pdataBANK0:	
   564  0030                     _espera4:	
   565  0030                     	ds	2
   566  0032                     _espera3:	
   567  0032                     	ds	2
   568  0034                     _espera2:	
   569  0034                     	ds	2
   570  0036                     _ADC2:	
   571  0036                     	ds	1
   572  0037                     _ADC1:	
   573  0037                     	ds	1
   574  0038                     _estado:	
   575  0038                     	ds	1
   576                           
   577                           	psect	inittext
   578  040A                     init_fetch0:	
   579                           ;	Called with low address in FSR and high address in W
   580                           
   581  040A  087E               	movf	btemp,w
   582  040B  008A               	movwf	10
   583  040C  087F               	movf	btemp+1,w
   584  040D  0082               	movwf	2
   585  040E                     init_ram0:	
   586                           ;Called with:
   587                           ;	high address of idata address in btemp 
   588                           ;	low address of idata address in btemp+1 
   589                           ;	low address of data in FSR
   590                           ;	high address + 1 of data in btemp-1
   591                           
   592  040E  120A  118A  240A  120A  118A  	fcall	init_fetch0
   593  0413  0080               	movwf	0
   594  0414  0A84               	incf	4,f
   595  0415  0804               	movf	4,w
   596  0416  067D               	xorwf	btemp+-1,w
   597  0417  1903               	btfsc	3,2
   598  0418  3400               	retlw	0
   599  0419  0AFF               	incf	btemp+1,f
   600  041A  1903               	btfsc	3,2
   601  041B  0AFE               	incf	btemp,f
   602  041C  2C0E               	goto	init_ram0
   603                           
   604                           	psect	clrtext
   605  0426                     clear_ram0:	
   606                           ;	Called with FSR containing the base address, and
   607                           ;	W with the last address+1
   608                           
   609  0426  0064               	clrwdt	;clear the watchdog before getting into this loop
   610  0427                     clrloop0:	
   611  0427  0180               	clrf	0	;clear RAM location pointed to by FSR
   612  0428  0A84               	incf	4,f	;increment pointer
   613  0429  0604               	xorwf	4,w	;XOR with final address
   614  042A  1903               	btfsc	3,2	;have we reached the end yet?
   615  042B  3400               	retlw	0	;all done for this memory range, return
   616  042C  0604               	xorwf	4,w	;XOR again to restore value
   617  042D  2C27               	goto	clrloop0	;do the next byte
   618                           
   619                           	psect	cstackCOMMON
   620  0070                     __pcstackCOMMON:	
   621  0070                     ?_setup:	
   622  0070                     ?_spiWrite:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_lcd_command:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_lcd_wchar:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_lcd_wstring:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_lcd_setup:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 1 bytes @ 0x0
   648  0070                     	ds	2
   649  0072                     ??_spiWrite:	
   650  0072                     ?_spiInit:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ??_lcd_command:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ??_lcd_wchar:	
   657                           ; 1 bytes @ 0x2
   658                           
   659  0072                     spiInit@sDataSample:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0072                     spiWrite@dat:	
   663                           ; 1 bytes @ 0x2
   664                           
   665                           
   666                           ; 1 bytes @ 0x2
   667  0072                     	ds	1
   668  0073                     spiInit@sClockIdle:	
   669                           
   670                           ; 1 bytes @ 0x3
   671  0073                     	ds	1
   672  0074                     lcd_command@a:	
   673  0074                     lcd_wchar@dato:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     spiInit@sTransmitEdge:	
   677                           ; 1 bytes @ 0x4
   678                           
   679                           
   680                           ; 1 bytes @ 0x4
   681  0074                     	ds	1
   682  0075                     ??_spiInit:	
   683  0075                     ?_lcd_cursor:	
   684                           ; 1 bytes @ 0x5
   685                           
   686  0075                     ??_lcd_wstring:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     ??_lcd_setup:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     lcd_cursor@b:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     spiInit@sType:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     lcd_wstring@i:	
   699                           ; 1 bytes @ 0x5
   700                           
   701                           
   702                           ; 2 bytes @ 0x5
   703  0075                     	ds	1
   704  0076                     ??_lcd_cursor:	
   705                           
   706                           ; 1 bytes @ 0x6
   707  0076                     	ds	1
   708  0077                     ??_setup:	
   709  0077                     lcd_wstring@string:	
   710                           ; 1 bytes @ 0x7
   711                           
   712                           
   713                           ; 1 bytes @ 0x7
   714  0077                     	ds	1
   715  0078                     lcd_cursor@a:	
   716                           
   717                           ; 1 bytes @ 0x8
   718  0078                     	ds	1
   719                           
   720                           	psect	cstackBANK0
   721  0039                     __pcstackBANK0:	
   722  0039                     ??_main:	
   723                           
   724                           ; 1 bytes @ 0x0
   725  0039                     	ds	2
   726                           
   727                           	psect	maintext
   728  002C                     __pmaintext:	
   729 ;;
   730 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   731 ;;
   732 ;; *************** function _main *****************
   733 ;; Defined at:
   734 ;;		line 58 in file "main.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : B00/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          0       2       0       0       0
   751 ;;      Totals:         0       2       0       0       0
   752 ;;Total ram usage:        2 bytes
   753 ;; Hardware stack levels required when called:    4
   754 ;; This function calls:
   755 ;;		_lcd_command
   756 ;;		_lcd_cursor
   757 ;;		_lcd_wchar
   758 ;;		_lcd_wstring
   759 ;;		_setup
   760 ;;		_spiWrite
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _main
   768  002C                     _main:	
   769  002C                     l1450:	
   770                           ;incstack = 0
   771                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   772                           
   773                           
   774                           ;main.c: 59:     setup();
   775  002C  120A  118A  23AB  120A  118A  	fcall	_setup
   776                           
   777                           ;main.c: 60:     spiWrite(recorre);
   778  0031  0879               	movf	_recorre,w
   779  0032  120A  118A  2435  120A  118A  	fcall	_spiWrite
   780  0037                     l1452:	
   781                           
   782                           ;main.c: 61:     _delay((unsigned long)((100)*(4000000/4000.0)));
   783  0037  3082               	movlw	130
   784  0038  1283               	bcf	3,5	;RP0=0, select bank0
   785  0039  1303               	bcf	3,6	;RP1=0, select bank0
   786  003A  00BA               	movwf	??_main+1
   787  003B  30DD               	movlw	221
   788  003C  00B9               	movwf	??_main
   789  003D                     u827:	
   790  003D  0BB9               	decfsz	??_main,f
   791  003E  283D               	goto	u827
   792  003F  0BBA               	decfsz	??_main+1,f
   793  0040  283D               	goto	u827
   794  0041                     l1454:	
   795                           
   796                           ;main.c: 63:         if(PIR1bits.SSPIF==1){
   797  0041  1283               	bcf	3,5	;RP0=0, select bank0
   798  0042  1303               	bcf	3,6	;RP1=0, select bank0
   799  0043  1D8C               	btfss	12,3	;volatile
   800  0044  2846               	goto	u581
   801  0045  2847               	goto	u580
   802  0046                     u581:	
   803  0046  2928               	goto	l1524
   804  0047                     u580:	
   805  0047                     l1456:	
   806                           
   807                           ;main.c: 64:             if(recorre == 0){
   808  0047  0879               	movf	_recorre,w
   809  0048  1D03               	btfss	3,2
   810  0049  284B               	goto	u591
   811  004A  284C               	goto	u590
   812  004B                     u591:	
   813  004B  2853               	goto	l1462
   814  004C                     u590:	
   815  004C                     l1458:	
   816                           
   817                           ;main.c: 65:                 a1 = SSPBUF;
   818  004C  0813               	movf	19,w	;volatile
   819  004D  00B9               	movwf	??_main
   820  004E  0839               	movf	??_main,w
   821  004F  00FA               	movwf	_a1
   822  0050                     l1460:	
   823                           
   824                           ;main.c: 66:                 recorre = 1;
   825  0050  01F9               	clrf	_recorre
   826  0051  0AF9               	incf	_recorre,f
   827                           
   828                           ;main.c: 67:             }else if(recorre == 1){
   829  0052  2921               	goto	l1520
   830  0053                     l1462:	
   831  0053  0379               	decf	_recorre,w
   832  0054  1D03               	btfss	3,2
   833  0055  2857               	goto	u601
   834  0056  2858               	goto	u600
   835  0057                     u601:	
   836  0057  2861               	goto	l1466
   837  0058                     u600:	
   838  0058                     l1464:	
   839                           
   840                           ;main.c: 68:                 b1 = SSPBUF;
   841  0058  0813               	movf	19,w	;volatile
   842  0059  00B9               	movwf	??_main
   843  005A  0839               	movf	??_main,w
   844  005B  00A3               	movwf	_b1
   845                           
   846                           ;main.c: 69:                 recorre = 2;
   847  005C  3002               	movlw	2
   848  005D  00B9               	movwf	??_main
   849  005E  0839               	movf	??_main,w
   850  005F  00F9               	movwf	_recorre
   851                           
   852                           ;main.c: 70:             }else if(recorre == 2){
   853  0060  2921               	goto	l1520
   854  0061                     l1466:	
   855  0061  3002               	movlw	2
   856  0062  0679               	xorwf	_recorre,w
   857  0063  1D03               	btfss	3,2
   858  0064  2866               	goto	u611
   859  0065  2867               	goto	u610
   860  0066                     u611:	
   861  0066  2870               	goto	l1470
   862  0067                     u610:	
   863  0067                     l1468:	
   864                           
   865                           ;main.c: 71:                 c1 = SSPBUF;
   866  0067  0813               	movf	19,w	;volatile
   867  0068  00B9               	movwf	??_main
   868  0069  0839               	movf	??_main,w
   869  006A  00A2               	movwf	_c1
   870                           
   871                           ;main.c: 72:                 recorre = 3;
   872  006B  3003               	movlw	3
   873  006C  00B9               	movwf	??_main
   874  006D  0839               	movf	??_main,w
   875  006E  00F9               	movwf	_recorre
   876                           
   877                           ;main.c: 73:             }else if(recorre == 3){
   878  006F  2921               	goto	l1520
   879  0070                     l1470:	
   880  0070  3003               	movlw	3
   881  0071  0679               	xorwf	_recorre,w
   882  0072  1D03               	btfss	3,2
   883  0073  2875               	goto	u621
   884  0074  2876               	goto	u620
   885  0075                     u621:	
   886  0075  287F               	goto	l1474
   887  0076                     u620:	
   888  0076                     l1472:	
   889                           
   890                           ;main.c: 74:                 a2 = SSPBUF;
   891  0076  0813               	movf	19,w	;volatile
   892  0077  00B9               	movwf	??_main
   893  0078  0839               	movf	??_main,w
   894  0079  00AB               	movwf	_a2
   895                           
   896                           ;main.c: 75:                 recorre = 4;
   897  007A  3004               	movlw	4
   898  007B  00B9               	movwf	??_main
   899  007C  0839               	movf	??_main,w
   900  007D  00F9               	movwf	_recorre
   901                           
   902                           ;main.c: 76:             }else if(recorre == 4){
   903  007E  2921               	goto	l1520
   904  007F                     l1474:	
   905  007F  3004               	movlw	4
   906  0080  0679               	xorwf	_recorre,w
   907  0081  1D03               	btfss	3,2
   908  0082  2884               	goto	u631
   909  0083  2885               	goto	u630
   910  0084                     u631:	
   911  0084  288E               	goto	l1478
   912  0085                     u630:	
   913  0085                     l1476:	
   914                           
   915                           ;main.c: 77:                 b2 = SSPBUF;
   916  0085  0813               	movf	19,w	;volatile
   917  0086  00B9               	movwf	??_main
   918  0087  0839               	movf	??_main,w
   919  0088  00AA               	movwf	_b2
   920                           
   921                           ;main.c: 78:                 recorre = 5;
   922  0089  3005               	movlw	5
   923  008A  00B9               	movwf	??_main
   924  008B  0839               	movf	??_main,w
   925  008C  00F9               	movwf	_recorre
   926                           
   927                           ;main.c: 79:             }else if(recorre == 5){
   928  008D  2921               	goto	l1520
   929  008E                     l1478:	
   930  008E  3005               	movlw	5
   931  008F  0679               	xorwf	_recorre,w
   932  0090  1D03               	btfss	3,2
   933  0091  2893               	goto	u641
   934  0092  2894               	goto	u640
   935  0093                     u641:	
   936  0093  289D               	goto	l1482
   937  0094                     u640:	
   938  0094                     l1480:	
   939                           
   940                           ;main.c: 80:                 c2 = SSPBUF;
   941  0094  0813               	movf	19,w	;volatile
   942  0095  00B9               	movwf	??_main
   943  0096  0839               	movf	??_main,w
   944  0097  00A9               	movwf	_c2
   945                           
   946                           ;main.c: 81:                 recorre = 6;
   947  0098  3006               	movlw	6
   948  0099  00B9               	movwf	??_main
   949  009A  0839               	movf	??_main,w
   950  009B  00F9               	movwf	_recorre
   951                           
   952                           ;main.c: 82:             }else if(recorre == 6){
   953  009C  2921               	goto	l1520
   954  009D                     l1482:	
   955  009D  3006               	movlw	6
   956  009E  0679               	xorwf	_recorre,w
   957  009F  1D03               	btfss	3,2
   958  00A0  28A2               	goto	u651
   959  00A1  28A3               	goto	u650
   960  00A2                     u651:	
   961  00A2  28AC               	goto	l1486
   962  00A3                     u650:	
   963  00A3                     l1484:	
   964                           
   965                           ;main.c: 83:                 d2 = SSPBUF;
   966  00A3  0813               	movf	19,w	;volatile
   967  00A4  00B9               	movwf	??_main
   968  00A5  0839               	movf	??_main,w
   969  00A6  00A8               	movwf	_d2
   970                           
   971                           ;main.c: 84:                 recorre = 7;
   972  00A7  3007               	movlw	7
   973  00A8  00B9               	movwf	??_main
   974  00A9  0839               	movf	??_main,w
   975  00AA  00F9               	movwf	_recorre
   976                           
   977                           ;main.c: 85:             }else if(recorre == 7){
   978  00AB  2921               	goto	l1520
   979  00AC                     l1486:	
   980  00AC  3007               	movlw	7
   981  00AD  0679               	xorwf	_recorre,w
   982  00AE  1D03               	btfss	3,2
   983  00AF  28B1               	goto	u661
   984  00B0  28B2               	goto	u660
   985  00B1                     u661:	
   986  00B1  28BB               	goto	l1490
   987  00B2                     u660:	
   988  00B2                     l1488:	
   989                           
   990                           ;main.c: 86:                 a3 = SSPBUF;
   991  00B2  0813               	movf	19,w	;volatile
   992  00B3  00B9               	movwf	??_main
   993  00B4  0839               	movf	??_main,w
   994  00B5  00A7               	movwf	_a3
   995                           
   996                           ;main.c: 87:                 recorre = 8;
   997  00B6  3008               	movlw	8
   998  00B7  00B9               	movwf	??_main
   999  00B8  0839               	movf	??_main,w
  1000  00B9  00F9               	movwf	_recorre
  1001                           
  1002                           ;main.c: 88:             }else if(recorre == 8){
  1003  00BA  2921               	goto	l1520
  1004  00BB                     l1490:	
  1005  00BB  3008               	movlw	8
  1006  00BC  0679               	xorwf	_recorre,w
  1007  00BD  1D03               	btfss	3,2
  1008  00BE  28C0               	goto	u671
  1009  00BF  28C1               	goto	u670
  1010  00C0                     u671:	
  1011  00C0  28CA               	goto	l1494
  1012  00C1                     u670:	
  1013  00C1                     l1492:	
  1014                           
  1015                           ;main.c: 89:                 b3 = SSPBUF;
  1016  00C1  0813               	movf	19,w	;volatile
  1017  00C2  00B9               	movwf	??_main
  1018  00C3  0839               	movf	??_main,w
  1019  00C4  00A6               	movwf	_b3
  1020                           
  1021                           ;main.c: 90:                 recorre = 9;
  1022  00C5  3009               	movlw	9
  1023  00C6  00B9               	movwf	??_main
  1024  00C7  0839               	movf	??_main,w
  1025  00C8  00F9               	movwf	_recorre
  1026                           
  1027                           ;main.c: 91:             }else if(recorre == 9){
  1028  00C9  2921               	goto	l1520
  1029  00CA                     l1494:	
  1030  00CA  3009               	movlw	9
  1031  00CB  0679               	xorwf	_recorre,w
  1032  00CC  1D03               	btfss	3,2
  1033  00CD  28CF               	goto	u681
  1034  00CE  28D0               	goto	u680
  1035  00CF                     u681:	
  1036  00CF  28D9               	goto	l1498
  1037  00D0                     u680:	
  1038  00D0                     l1496:	
  1039                           
  1040                           ;main.c: 92:                 c3 = SSPBUF;
  1041  00D0  0813               	movf	19,w	;volatile
  1042  00D1  00B9               	movwf	??_main
  1043  00D2  0839               	movf	??_main,w
  1044  00D3  00A5               	movwf	_c3
  1045                           
  1046                           ;main.c: 93:                 recorre = 10;
  1047  00D4  300A               	movlw	10
  1048  00D5  00B9               	movwf	??_main
  1049  00D6  0839               	movf	??_main,w
  1050  00D7  00F9               	movwf	_recorre
  1051                           
  1052                           ;main.c: 94:             }else if(recorre == 10){
  1053  00D8  2921               	goto	l1520
  1054  00D9                     l1498:	
  1055  00D9  300A               	movlw	10
  1056  00DA  0679               	xorwf	_recorre,w
  1057  00DB  1D03               	btfss	3,2
  1058  00DC  28DE               	goto	u691
  1059  00DD  28DF               	goto	u690
  1060  00DE                     u691:	
  1061  00DE  28E8               	goto	l1502
  1062  00DF                     u690:	
  1063  00DF                     l1500:	
  1064                           
  1065                           ;main.c: 95:                 d3 = SSPBUF;
  1066  00DF  0813               	movf	19,w	;volatile
  1067  00E0  00B9               	movwf	??_main
  1068  00E1  0839               	movf	??_main,w
  1069  00E2  00A4               	movwf	_d3
  1070                           
  1071                           ;main.c: 96:                 recorre = 11;
  1072  00E3  300B               	movlw	11
  1073  00E4  00B9               	movwf	??_main
  1074  00E5  0839               	movf	??_main,w
  1075  00E6  00F9               	movwf	_recorre
  1076                           
  1077                           ;main.c: 97:             }else if(recorre == 11){
  1078  00E7  2921               	goto	l1520
  1079  00E8                     l1502:	
  1080  00E8  300B               	movlw	11
  1081  00E9  0679               	xorwf	_recorre,w
  1082  00EA  1D03               	btfss	3,2
  1083  00EB  28ED               	goto	u701
  1084  00EC  28EE               	goto	u700
  1085  00ED                     u701:	
  1086  00ED  28F7               	goto	l1506
  1087  00EE                     u700:	
  1088  00EE                     l1504:	
  1089                           
  1090                           ;main.c: 98:                 a4 = SSPBUF;
  1091  00EE  0813               	movf	19,w	;volatile
  1092  00EF  00B9               	movwf	??_main
  1093  00F0  0839               	movf	??_main,w
  1094  00F1  00FB               	movwf	_a4
  1095                           
  1096                           ;main.c: 99:                 recorre = 12;
  1097  00F2  300C               	movlw	12
  1098  00F3  00B9               	movwf	??_main
  1099  00F4  0839               	movf	??_main,w
  1100  00F5  00F9               	movwf	_recorre
  1101                           
  1102                           ;main.c: 100:             }else if(recorre == 12){
  1103  00F6  2921               	goto	l1520
  1104  00F7                     l1506:	
  1105  00F7  300C               	movlw	12
  1106  00F8  0679               	xorwf	_recorre,w
  1107  00F9  1D03               	btfss	3,2
  1108  00FA  28FC               	goto	u711
  1109  00FB  28FD               	goto	u710
  1110  00FC                     u711:	
  1111  00FC  2906               	goto	l1510
  1112  00FD                     u710:	
  1113  00FD                     l1508:	
  1114                           
  1115                           ;main.c: 101:                 b4 = SSPBUF;
  1116  00FD  0813               	movf	19,w	;volatile
  1117  00FE  00B9               	movwf	??_main
  1118  00FF  0839               	movf	??_main,w
  1119  0100  00AE               	movwf	_b4
  1120                           
  1121                           ;main.c: 102:                 recorre = 13;
  1122  0101  300D               	movlw	13
  1123  0102  00B9               	movwf	??_main
  1124  0103  0839               	movf	??_main,w
  1125  0104  00F9               	movwf	_recorre
  1126                           
  1127                           ;main.c: 103:             }else if(recorre == 13){
  1128  0105  2921               	goto	l1520
  1129  0106                     l1510:	
  1130  0106  300D               	movlw	13
  1131  0107  0679               	xorwf	_recorre,w
  1132  0108  1D03               	btfss	3,2
  1133  0109  290B               	goto	u721
  1134  010A  290C               	goto	u720
  1135  010B                     u721:	
  1136  010B  2915               	goto	l1514
  1137  010C                     u720:	
  1138  010C                     l1512:	
  1139                           
  1140                           ;main.c: 104:                 c4 = SSPBUF;
  1141  010C  0813               	movf	19,w	;volatile
  1142  010D  00B9               	movwf	??_main
  1143  010E  0839               	movf	??_main,w
  1144  010F  00AD               	movwf	_c4
  1145                           
  1146                           ;main.c: 105:                 recorre = 14;
  1147  0110  300E               	movlw	14
  1148  0111  00B9               	movwf	??_main
  1149  0112  0839               	movf	??_main,w
  1150  0113  00F9               	movwf	_recorre
  1151                           
  1152                           ;main.c: 106:             }else if(recorre == 14){
  1153  0114  2921               	goto	l1520
  1154  0115                     l1514:	
  1155  0115  300E               	movlw	14
  1156  0116  0679               	xorwf	_recorre,w
  1157  0117  1D03               	btfss	3,2
  1158  0118  291A               	goto	u731
  1159  0119  291B               	goto	u730
  1160  011A                     u731:	
  1161  011A  2921               	goto	l163
  1162  011B                     u730:	
  1163  011B                     l1516:	
  1164                           
  1165                           ;main.c: 107:                 d4 = SSPBUF;
  1166  011B  0813               	movf	19,w	;volatile
  1167  011C  00B9               	movwf	??_main
  1168  011D  0839               	movf	??_main,w
  1169  011E  00AC               	movwf	_d4
  1170  011F                     l1518:	
  1171                           
  1172                           ;main.c: 108:                 recorre = 0;
  1173  011F  01F9               	clrf	_recorre
  1174  0120  2921               	goto	l1520
  1175  0121                     l163:	
  1176  0121                     l1520:	
  1177                           
  1178                           ;main.c: 110:             PIR1bits.SSPIF=0;
  1179  0121  118C               	bcf	12,3	;volatile
  1180  0122                     l1522:	
  1181                           
  1182                           ;main.c: 111:             spiWrite(recorre);
  1183  0122  0879               	movf	_recorre,w
  1184  0123  120A  118A  2435  120A  118A  	fcall	_spiWrite
  1185  0128                     l1524:	
  1186                           
  1187                           ;main.c: 114:         if(espera1!=0){
  1188  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1190  012A  0820               	movf	_espera1,w
  1191  012B  0421               	iorwf	_espera1+1,w
  1192  012C  1903               	btfsc	3,2
  1193  012D  292F               	goto	u741
  1194  012E  2930               	goto	u740
  1195  012F                     u741:	
  1196  012F  2937               	goto	l1528
  1197  0130                     u740:	
  1198  0130                     l1526:	
  1199                           
  1200                           ;main.c: 115:         espera1--;
  1201  0130  3001               	movlw	1
  1202  0131  02A0               	subwf	_espera1,f
  1203  0132  3000               	movlw	0
  1204  0133  1C03               	skipc
  1205  0134  03A1               	decf	_espera1+1,f
  1206  0135  02A1               	subwf	_espera1+1,f
  1207                           
  1208                           ;main.c: 116:         }else if(espera1==0){
  1209  0136  2991               	goto	l1552
  1210  0137                     l1528:	
  1211  0137  0820               	movf	_espera1,w
  1212  0138  0421               	iorwf	_espera1+1,w
  1213  0139  1D03               	btfss	3,2
  1214  013A  293C               	goto	u751
  1215  013B  293D               	goto	u750
  1216  013C                     u751:	
  1217  013C  2991               	goto	l1552
  1218  013D                     u750:	
  1219  013D                     l1530:	
  1220                           
  1221                           ;main.c: 117:             lcd_command(0x01);
  1222  013D  3001               	movlw	1
  1223  013E  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  1224  0143                     l1532:	
  1225                           
  1226                           ;main.c: 118:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1227  0143  30C7               	movlw	199
  1228  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0146  00B9               	movwf	??_main
  1231  0147                     u837:	
  1232  0147  2948               	nop2
  1233  0148  0BB9               	decfsz	??_main,f
  1234  0149  2947               	goto	u837
  1235  014A  294B               	nop2
  1236  014B                     l1534:	
  1237                           
  1238                           ;main.c: 119:             lcd_cursor(1,3);
  1239  014B  3003               	movlw	3
  1240  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1241  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1242  014E  00B9               	movwf	??_main
  1243  014F  0839               	movf	??_main,w
  1244  0150  00F5               	movwf	lcd_cursor@b
  1245  0151  3001               	movlw	1
  1246  0152  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1247  0157                     l1536:	
  1248                           
  1249                           ;main.c: 120:             lcd_wstring("Temperatura:");
  1250  0157  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1251  0158  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1252  015D                     l1538:	
  1253                           
  1254                           ;main.c: 121:             lcd_cursor(2,3);
  1255  015D  3003               	movlw	3
  1256  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1257  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0160  00B9               	movwf	??_main
  1259  0161  0839               	movf	??_main,w
  1260  0162  00F5               	movwf	lcd_cursor@b
  1261  0163  3002               	movlw	2
  1262  0164  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1263  0169                     l1540:	
  1264                           
  1265                           ;main.c: 122:             lcd_wchar(a1);
  1266  0169  087A               	movf	_a1,w
  1267  016A  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1268  016F                     l1542:	
  1269                           
  1270                           ;main.c: 123:             lcd_wchar(b1);
  1271  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0171  0823               	movf	_b1,w
  1274  0172  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1275  0177                     l1544:	
  1276                           
  1277                           ;main.c: 124:             lcd_wstring(".");
  1278  0177  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1279  0178  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1280  017D                     l1546:	
  1281                           
  1282                           ;main.c: 125:             lcd_wchar(c1);
  1283  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1284  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1285  017F  0822               	movf	_c1,w
  1286  0180  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1287  0185                     l1548:	
  1288                           
  1289                           ;main.c: 126:             lcd_wstring("C");
  1290  0185  302C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1291  0186  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1292  018B                     l1550:	
  1293                           
  1294                           ;main.c: 127:             espera1=4;
  1295  018B  3004               	movlw	4
  1296  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1297  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1298  018E  00A0               	movwf	_espera1
  1299  018F  3000               	movlw	0
  1300  0190  00A1               	movwf	_espera1+1
  1301  0191                     l1552:	
  1302                           
  1303                           ;main.c: 129:         if(espera2!=0){
  1304  0191  0834               	movf	_espera2,w
  1305  0192  0435               	iorwf	_espera2+1,w
  1306  0193  1903               	btfsc	3,2
  1307  0194  2996               	goto	u761
  1308  0195  2997               	goto	u760
  1309  0196                     u761:	
  1310  0196  299E               	goto	l1556
  1311  0197                     u760:	
  1312  0197                     l1554:	
  1313                           
  1314                           ;main.c: 130:             espera2--;
  1315  0197  3001               	movlw	1
  1316  0198  02B4               	subwf	_espera2,f
  1317  0199  3000               	movlw	0
  1318  019A  1C03               	skipc
  1319  019B  03B5               	decf	_espera2+1,f
  1320  019C  02B5               	subwf	_espera2+1,f
  1321                           
  1322                           ;main.c: 131:         }else if(espera2==0){
  1323  019D  29FC               	goto	l1580
  1324  019E                     l1556:	
  1325  019E  0834               	movf	_espera2,w
  1326  019F  0435               	iorwf	_espera2+1,w
  1327  01A0  1D03               	btfss	3,2
  1328  01A1  29A3               	goto	u771
  1329  01A2  29A4               	goto	u770
  1330  01A3                     u771:	
  1331  01A3  29FC               	goto	l1580
  1332  01A4                     u770:	
  1333  01A4                     l1558:	
  1334                           
  1335                           ;main.c: 132:             lcd_command(0x01);
  1336  01A4  3001               	movlw	1
  1337  01A5  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  1338  01AA                     l1560:	
  1339                           
  1340                           ;main.c: 133:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1341  01AA  30C7               	movlw	199
  1342  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1343  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1344  01AD  00B9               	movwf	??_main
  1345  01AE                     u847:	
  1346  01AE  29AF               	nop2
  1347  01AF  0BB9               	decfsz	??_main,f
  1348  01B0  29AE               	goto	u847
  1349  01B1  29B2               	nop2
  1350  01B2                     l1562:	
  1351                           
  1352                           ;main.c: 134:             lcd_cursor(1,3);
  1353  01B2  3003               	movlw	3
  1354  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1355  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1356  01B5  00B9               	movwf	??_main
  1357  01B6  0839               	movf	??_main,w
  1358  01B7  00F5               	movwf	lcd_cursor@b
  1359  01B8  3001               	movlw	1
  1360  01B9  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1361  01BE                     l1564:	
  1362                           
  1363                           ;main.c: 135:             lcd_wstring("Peso:");
  1364  01BE  3021               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1365  01BF  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1366  01C4                     l1566:	
  1367                           
  1368                           ;main.c: 136:             lcd_cursor(2,3);
  1369  01C4  3003               	movlw	3
  1370  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1371  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1372  01C7  00B9               	movwf	??_main
  1373  01C8  0839               	movf	??_main,w
  1374  01C9  00F5               	movwf	lcd_cursor@b
  1375  01CA  3002               	movlw	2
  1376  01CB  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1377  01D0                     l1568:	
  1378                           
  1379                           ;main.c: 137:             lcd_wchar(a2);
  1380  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1381  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1382  01D2  082B               	movf	_a2,w
  1383  01D3  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1384  01D8                     l1570:	
  1385                           
  1386                           ;main.c: 138:             lcd_wchar(b2);
  1387  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1388  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1389  01DA  082A               	movf	_b2,w
  1390  01DB  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1391  01E0                     l1572:	
  1392                           
  1393                           ;main.c: 139:             lcd_wchar(c2);
  1394  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1395  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1396  01E2  0829               	movf	_c2,w
  1397  01E3  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1398  01E8                     l1574:	
  1399                           
  1400                           ;main.c: 140:             lcd_wchar(d2);
  1401  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1402  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1403  01EA  0828               	movf	_d2,w
  1404  01EB  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1405  01F0                     l1576:	
  1406                           
  1407                           ;main.c: 141:             lcd_wstring("kg");
  1408  01F0  3027               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1409  01F1  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1410  01F6                     l1578:	
  1411                           
  1412                           ;main.c: 142:             espera2=4;
  1413  01F6  3004               	movlw	4
  1414  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1415  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1416  01F9  00B4               	movwf	_espera2
  1417  01FA  3000               	movlw	0
  1418  01FB  00B5               	movwf	_espera2+1
  1419  01FC                     l1580:	
  1420                           
  1421                           ;main.c: 144:         if(espera3!=0){
  1422  01FC  0832               	movf	_espera3,w
  1423  01FD  0433               	iorwf	_espera3+1,w
  1424  01FE  1903               	btfsc	3,2
  1425  01FF  2A01               	goto	u781
  1426  0200  2A02               	goto	u780
  1427  0201                     u781:	
  1428  0201  2A09               	goto	l1584
  1429  0202                     u780:	
  1430  0202                     l1582:	
  1431                           
  1432                           ;main.c: 145:             espera3--;
  1433  0202  3001               	movlw	1
  1434  0203  02B2               	subwf	_espera3,f
  1435  0204  3000               	movlw	0
  1436  0205  1C03               	skipc
  1437  0206  03B3               	decf	_espera3+1,f
  1438  0207  02B3               	subwf	_espera3+1,f
  1439                           
  1440                           ;main.c: 146:         }else if(espera3==0){
  1441  0208  2A67               	goto	l1608
  1442  0209                     l1584:	
  1443  0209  0832               	movf	_espera3,w
  1444  020A  0433               	iorwf	_espera3+1,w
  1445  020B  1D03               	btfss	3,2
  1446  020C  2A0E               	goto	u791
  1447  020D  2A0F               	goto	u790
  1448  020E                     u791:	
  1449  020E  2A67               	goto	l1608
  1450  020F                     u790:	
  1451  020F                     l1586:	
  1452                           
  1453                           ;main.c: 147:             lcd_command(0x01);
  1454  020F  3001               	movlw	1
  1455  0210  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  1456  0215                     l1588:	
  1457                           
  1458                           ;main.c: 148:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1459  0215  30C7               	movlw	199
  1460  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0218  00B9               	movwf	??_main
  1463  0219                     u857:	
  1464  0219  2A1A               	nop2
  1465  021A  0BB9               	decfsz	??_main,f
  1466  021B  2A19               	goto	u857
  1467  021C  2A1D               	nop2
  1468  021D                     l1590:	
  1469                           
  1470                           ;main.c: 149:             lcd_cursor(1,3);
  1471  021D  3003               	movlw	3
  1472  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1473  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0220  00B9               	movwf	??_main
  1475  0221  0839               	movf	??_main,w
  1476  0222  00F5               	movwf	lcd_cursor@b
  1477  0223  3001               	movlw	1
  1478  0224  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1479  0229                     l1592:	
  1480                           
  1481                           ;main.c: 150:             lcd_wstring("Caudal:");
  1482  0229  3019               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1483  022A  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1484  022F                     l1594:	
  1485                           
  1486                           ;main.c: 151:             lcd_cursor(2,3);
  1487  022F  3003               	movlw	3
  1488  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0232  00B9               	movwf	??_main
  1491  0233  0839               	movf	??_main,w
  1492  0234  00F5               	movwf	lcd_cursor@b
  1493  0235  3002               	movlw	2
  1494  0236  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1495  023B                     l1596:	
  1496                           
  1497                           ;main.c: 152:             lcd_wchar(a3);
  1498  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1499  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1500  023D  0827               	movf	_a3,w
  1501  023E  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1502  0243                     l1598:	
  1503                           
  1504                           ;main.c: 153:             lcd_wstring(".");
  1505  0243  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1506  0244  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1507  0249                     l1600:	
  1508                           
  1509                           ;main.c: 154:             lcd_wchar(b3);
  1510  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1511  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1512  024B  0826               	movf	_b3,w
  1513  024C  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1514  0251                     l1602:	
  1515                           
  1516                           ;main.c: 155:             lcd_wchar(c3);
  1517  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0253  0825               	movf	_c3,w
  1520  0254  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1521  0259                     l1604:	
  1522                           
  1523                           ;main.c: 156:             lcd_wchar(d3);
  1524  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1525  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1526  025B  0824               	movf	_d3,w
  1527  025C  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1528  0261                     l1606:	
  1529                           
  1530                           ;main.c: 157:             espera3=4;
  1531  0261  3004               	movlw	4
  1532  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0264  00B2               	movwf	_espera3
  1535  0265  3000               	movlw	0
  1536  0266  00B3               	movwf	_espera3+1
  1537  0267                     l1608:	
  1538                           
  1539                           ;main.c: 159:         if(espera4!=0){
  1540  0267  0830               	movf	_espera4,w
  1541  0268  0431               	iorwf	_espera4+1,w
  1542  0269  1903               	btfsc	3,2
  1543  026A  2A6C               	goto	u801
  1544  026B  2A6D               	goto	u800
  1545  026C                     u801:	
  1546  026C  2A74               	goto	l1612
  1547  026D                     u800:	
  1548  026D                     l1610:	
  1549                           
  1550                           ;main.c: 160:             espera4--;
  1551  026D  3001               	movlw	1
  1552  026E  02B0               	subwf	_espera4,f
  1553  026F  3000               	movlw	0
  1554  0270  1C03               	skipc
  1555  0271  03B1               	decf	_espera4+1,f
  1556  0272  02B1               	subwf	_espera4+1,f
  1557                           
  1558                           ;main.c: 161:         }else if(espera4==0){
  1559  0273  2AD6               	goto	l1638
  1560  0274                     l1612:	
  1561  0274  0830               	movf	_espera4,w
  1562  0275  0431               	iorwf	_espera4+1,w
  1563  0276  1D03               	btfss	3,2
  1564  0277  2A79               	goto	u811
  1565  0278  2A7A               	goto	u810
  1566  0279                     u811:	
  1567  0279  2AD6               	goto	l1638
  1568  027A                     u810:	
  1569  027A                     l1614:	
  1570                           
  1571                           ;main.c: 162:             lcd_command(0x01);
  1572  027A  3001               	movlw	1
  1573  027B  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  1574  0280                     l1616:	
  1575                           
  1576                           ;main.c: 163:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1577  0280  30C7               	movlw	199
  1578  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0283  00B9               	movwf	??_main
  1581  0284                     u867:	
  1582  0284  2A85               	nop2
  1583  0285  0BB9               	decfsz	??_main,f
  1584  0286  2A84               	goto	u867
  1585  0287  2A88               	nop2
  1586  0288                     l1618:	
  1587                           
  1588                           ;main.c: 164:             lcd_cursor(1,3);
  1589  0288  3003               	movlw	3
  1590  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1591  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1592  028B  00B9               	movwf	??_main
  1593  028C  0839               	movf	??_main,w
  1594  028D  00F5               	movwf	lcd_cursor@b
  1595  028E  3001               	movlw	1
  1596  028F  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1597  0294                     l1620:	
  1598                           
  1599                           ;main.c: 165:             lcd_wstring("Distancia:");
  1600  0294  300E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1601  0295  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1602  029A                     l1622:	
  1603                           
  1604                           ;main.c: 166:             lcd_cursor(2,3);
  1605  029A  3003               	movlw	3
  1606  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1607  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1608  029D  00B9               	movwf	??_main
  1609  029E  0839               	movf	??_main,w
  1610  029F  00F5               	movwf	lcd_cursor@b
  1611  02A0  3002               	movlw	2
  1612  02A1  120A  118A  2388  120A  118A  	fcall	_lcd_cursor
  1613  02A6                     l1624:	
  1614                           
  1615                           ;main.c: 167:             lcd_wchar(a4);
  1616  02A6  087B               	movf	_a4,w
  1617  02A7  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1618  02AC                     l1626:	
  1619                           
  1620                           ;main.c: 168:             lcd_wchar(b4);
  1621  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1622  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1623  02AE  082E               	movf	_b4,w
  1624  02AF  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1625  02B4                     l1628:	
  1626                           
  1627                           ;main.c: 169:             lcd_wstring(".");
  1628  02B4  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1629  02B5  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1630  02BA                     l1630:	
  1631                           
  1632                           ;main.c: 170:             lcd_wchar(c4);
  1633  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1634  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1635  02BC  082D               	movf	_c4,w
  1636  02BD  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1637  02C2                     l1632:	
  1638                           
  1639                           ;main.c: 171:             lcd_wchar(d4);
  1640  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1641  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1642  02C4  082C               	movf	_d4,w
  1643  02C5  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  1644  02CA                     l1634:	
  1645                           
  1646                           ;main.c: 172:             lcd_wstring("m");
  1647  02CA  302E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1648  02CB  120A  118A  2363  120A  118A  	fcall	_lcd_wstring
  1649  02D0                     l1636:	
  1650                           
  1651                           ;main.c: 173:             espera4=4;
  1652  02D0  3004               	movlw	4
  1653  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1654  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1655  02D3  00B0               	movwf	_espera4
  1656  02D4  3000               	movlw	0
  1657  02D5  00B1               	movwf	_espera4+1
  1658  02D6                     l1638:	
  1659                           
  1660                           ;main.c: 175:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1661  02D6  300D               	movlw	13
  1662  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1663  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1664  02D9  00BA               	movwf	??_main+1
  1665  02DA  30FB               	movlw	251
  1666  02DB  00B9               	movwf	??_main
  1667  02DC                     u877:	
  1668  02DC  0BB9               	decfsz	??_main,f
  1669  02DD  2ADC               	goto	u877
  1670  02DE  0BBA               	decfsz	??_main+1,f
  1671  02DF  2ADC               	goto	u877
  1672  02E0                     l1640:	
  1673                           
  1674                           ;main.c: 176:         PORTA = a1;
  1675  02E0  087A               	movf	_a1,w
  1676  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1677  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1678  02E3  0085               	movwf	5	;volatile
  1679  02E4  2841               	goto	l1454
  1680  02E5  120A  118A  280C   	ljmp	start
  1681  02E8                     __end_of_main:	
  1682                           
  1683                           	psect	text1
  1684  0435                     __ptext1:	
  1685 ;; *************** function _spiWrite *****************
  1686 ;; Defined at:
  1687 ;;		line 34 in file "SPI.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  dat             1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  dat             1    2[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _spiWrite
  1717  0435                     _spiWrite:	
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _spiWrite: [wreg]
  1721                           ;spiWrite@dat stored from wreg
  1722  0435  00F2               	movwf	spiWrite@dat
  1723  0436                     l1220:	
  1724                           
  1725                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1726  0436  0872               	movf	spiWrite@dat,w
  1727  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0439  0093               	movwf	19	;volatile
  1730  043A                     l212:	
  1731  043A  0008               	return
  1732  043B                     __end_of_spiWrite:	
  1733                           
  1734                           	psect	text2
  1735  03AB                     __ptext2:	
  1736 ;; *************** function _setup *****************
  1737 ;; Defined at:
  1738 ;;		line 368 in file "main.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    3
  1759 ;; This function calls:
  1760 ;;		_lcd_setup
  1761 ;;		_spiInit
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _setup
  1769  03AB                     _setup:	
  1770  03AB                     l1208:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1773                           
  1774                           
  1775                           ;main.c: 369:     TRISA = 0;
  1776  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  1777  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  1778  03AD  0185               	clrf	5	;volatile
  1779                           
  1780                           ;main.c: 370:     TRISB = 0;
  1781  03AE  0186               	clrf	6	;volatile
  1782                           
  1783                           ;main.c: 371:     ANSELH = 0;
  1784  03AF  1683               	bsf	3,5	;RP0=1, select bank3
  1785  03B0  1703               	bsf	3,6	;RP1=1, select bank3
  1786  03B1  0189               	clrf	9	;volatile
  1787                           
  1788                           ;main.c: 372:     PORTB=0;
  1789  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1790  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1791  03B4  0186               	clrf	6	;volatile
  1792                           
  1793                           ;main.c: 373:     PORTA = 0;
  1794  03B5  0185               	clrf	5	;volatile
  1795  03B6                     l1210:	
  1796                           
  1797                           ;main.c: 374:     lcd_setup();
  1798  03B6  120A  118A  22E8  120A  118A  	fcall	_lcd_setup
  1799  03BB                     l1212:	
  1800                           
  1801                           ;main.c: 375:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1802  03BB  01F2               	clrf	spiInit@sDataSample
  1803  03BC  01F3               	clrf	spiInit@sClockIdle
  1804  03BD  01F4               	clrf	spiInit@sTransmitEdge
  1805  03BE  3020               	movlw	32
  1806  03BF  120A  118A  23CB  120A  118A  	fcall	_spiInit
  1807  03C4                     l1214:	
  1808                           
  1809                           ;main.c: 376:     PIR1bits.SSPIF = 0;
  1810  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1811  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1812  03C6  118C               	bcf	12,3	;volatile
  1813  03C7                     l1216:	
  1814                           
  1815                           ;main.c: 377:     PIE1bits.SSPIE = 0;
  1816  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1817  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1818  03C9  118C               	bcf	12,3	;volatile
  1819  03CA                     l186:	
  1820  03CA  0008               	return
  1821  03CB                     __end_of_setup:	
  1822                           
  1823                           	psect	text3
  1824  03CB                     __ptext3:	
  1825 ;; *************** function _spiInit *****************
  1826 ;; Defined at:
  1827 ;;		line 12 in file "SPI.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  sType           1    wreg     enum E1264
  1830 ;;  sDataSample     1    2[COMMON] enum E1272
  1831 ;;  sClockIdle      1    3[COMMON] enum E1276
  1832 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  sType           1    5[COMMON] enum E1264
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         3       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         4       0       0       0       0
  1848 ;;Total ram usage:        4 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_setup
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _spiInit
  1860  03CB                     _spiInit:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1864                           ;spiInit@sType stored from wreg
  1865  03CB  00F5               	movwf	spiInit@sType
  1866  03CC                     l1176:	
  1867                           
  1868                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1869  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1870  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1871  03CE  1287               	bcf	7,5	;volatile
  1872                           
  1873                           ;SPI.c: 15:     if(sType & 0b00000100)
  1874  03CF  1D75               	btfss	spiInit@sType,2
  1875  03D0  2BD2               	goto	u301
  1876  03D1  2BD3               	goto	u300
  1877  03D2                     u301:	
  1878  03D2  2BD7               	goto	l1182
  1879  03D3                     u300:	
  1880  03D3                     l1178:	
  1881                           
  1882                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1883  03D3  0874               	movf	spiInit@sTransmitEdge,w
  1884  03D4  0094               	movwf	20	;volatile
  1885  03D5                     l1180:	
  1886                           
  1887                           ;SPI.c: 18:         TRISC3 = 1;
  1888  03D5  1587               	bsf	7,3	;volatile
  1889                           
  1890                           ;SPI.c: 19:     }
  1891  03D6  2BDB               	goto	l202
  1892  03D7                     l1182:	
  1893                           
  1894                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1895  03D7  0872               	movf	spiInit@sDataSample,w
  1896  03D8  0474               	iorwf	spiInit@sTransmitEdge,w
  1897  03D9  0094               	movwf	20	;volatile
  1898  03DA                     l1184:	
  1899                           
  1900                           ;SPI.c: 23:         TRISC3 = 0;
  1901  03DA  1187               	bcf	7,3	;volatile
  1902  03DB                     l202:	
  1903                           ;SPI.c: 24:     }
  1904                           
  1905                           
  1906                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1907  03DB  0875               	movf	spiInit@sType,w
  1908  03DC  0473               	iorwf	spiInit@sClockIdle,w
  1909  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1910  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1911  03DF  0094               	movwf	20	;volatile
  1912  03E0                     l203:	
  1913  03E0  0008               	return
  1914  03E1                     __end_of_spiInit:	
  1915                           
  1916                           	psect	text4
  1917  02E8                     __ptext4:	
  1918 ;; *************** function _lcd_setup *****************
  1919 ;; Defined at:
  1920 ;;		line 66 in file "LCD.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          2       0       0       0       0
  1937 ;;      Totals:         2       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    2
  1941 ;; This function calls:
  1942 ;;		_lcd_command
  1943 ;; This function is called by:
  1944 ;;		_setup
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _lcd_setup
  1950  02E8                     _lcd_setup:	
  1951  02E8                     l1156:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _lcd_setup: [wreg+status,2+status,0+pclath+cstack]
  1954                           
  1955                           
  1956                           ;LCD.c: 67:     TRISB = 0x00;
  1957  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1958  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1959  02EA  0186               	clrf	6	;volatile
  1960                           
  1961                           ;LCD.c: 68:     ANSELH = 0x00;
  1962  02EB  1683               	bsf	3,5	;RP0=1, select bank3
  1963  02EC  1703               	bsf	3,6	;RP1=1, select bank3
  1964  02ED  0189               	clrf	9	;volatile
  1965                           
  1966                           ;LCD.c: 69:     TRISD = 0x00;
  1967  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1968  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1969  02F0  0188               	clrf	8	;volatile
  1970  02F1                     l1158:	
  1971                           
  1972                           ;LCD.c: 70:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1973  02F1  3015               	movlw	21
  1974  02F2  00F6               	movwf	??_lcd_setup+1
  1975  02F3  30C6               	movlw	198
  1976  02F4  00F5               	movwf	??_lcd_setup
  1977  02F5                     u887:	
  1978  02F5  0BF5               	decfsz	??_lcd_setup,f
  1979  02F6  2AF5               	goto	u887
  1980  02F7  0BF6               	decfsz	??_lcd_setup+1,f
  1981  02F8  2AF5               	goto	u887
  1982  02F9  0000               	nop
  1983  02FA                     l1160:	
  1984                           
  1985                           ;LCD.c: 71:     lcd_command(0x03);
  1986  02FA  3003               	movlw	3
  1987  02FB  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  1988  0300                     l1162:	
  1989                           
  1990                           ;LCD.c: 72:     _delay((unsigned long)((4.2)*(4000000/4000.0)));
  1991  0300  3006               	movlw	6
  1992  0301  00F6               	movwf	??_lcd_setup+1
  1993  0302  3073               	movlw	115
  1994  0303  00F5               	movwf	??_lcd_setup
  1995  0304                     u897:	
  1996  0304  0BF5               	decfsz	??_lcd_setup,f
  1997  0305  2B04               	goto	u897
  1998  0306  0BF6               	decfsz	??_lcd_setup+1,f
  1999  0307  2B04               	goto	u897
  2000  0308                     l1164:	
  2001                           
  2002                           ;LCD.c: 73:     lcd_command(0x03);
  2003  0308  3003               	movlw	3
  2004  0309  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2005  030E                     l1166:	
  2006                           
  2007                           ;LCD.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2008  030E  30C7               	movlw	199
  2009  030F  00F5               	movwf	??_lcd_setup
  2010  0310                     u907:	
  2011  0310  2B11               	nop2
  2012  0311  0BF5               	decfsz	??_lcd_setup,f
  2013  0312  2B10               	goto	u907
  2014  0313  2B14               	nop2
  2015  0314  2B15               	nop2
  2016  0315                     l1168:	
  2017                           
  2018                           ;LCD.c: 75:     lcd_command(0x03);
  2019  0315  3003               	movlw	3
  2020  0316  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2021  031B                     l1170:	
  2022                           
  2023                           ;LCD.c: 76:     lcd_command(0x38);
  2024  031B  3038               	movlw	56
  2025  031C  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2026  0321                     l1172:	
  2027                           
  2028                           ;LCD.c: 77:     lcd_command(0x0C);
  2029  0321  300C               	movlw	12
  2030  0322  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2031  0327                     l1174:	
  2032                           
  2033                           ;LCD.c: 78:     lcd_command(0x06);
  2034  0327  3006               	movlw	6
  2035  0328  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2036  032D                     l46:	
  2037  032D  0008               	return
  2038  032E                     __end_of_lcd_setup:	
  2039                           
  2040                           	psect	text5
  2041  0363                     __ptext5:	
  2042 ;; *************** function _lcd_wstring *****************
  2043 ;; Defined at:
  2044 ;;		line 59 in file "LCD.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  string          1    wreg     PTR unsigned char 
  2047 ;;		 -> STR_10(2), STR_9(2), STR_8(11), STR_7(2), 
  2048 ;;		 -> STR_6(8), STR_5(3), STR_4(6), STR_3(2), 
  2049 ;;		 -> STR_2(2), STR_1(13), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  string          1    7[COMMON] PTR unsigned char 
  2052 ;;		 -> STR_10(2), STR_9(2), STR_8(11), STR_7(2), 
  2053 ;;		 -> STR_6(8), STR_5(3), STR_4(6), STR_3(2), 
  2054 ;;		 -> STR_2(2), STR_1(13), 
  2055 ;;  i               2    5[COMMON] int 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         3       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0
  2068 ;;      Totals:         3       0       0       0       0
  2069 ;;Total ram usage:        3 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    2
  2072 ;; This function calls:
  2073 ;;		_lcd_wchar
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _lcd_wstring
  2081  0363                     _lcd_wstring:	
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _lcd_wstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2085                           ;lcd_wstring@string stored from wreg
  2086  0363  00F7               	movwf	lcd_wstring@string
  2087  0364                     l1200:	
  2088                           
  2089                           ;LCD.c: 60:     int i;;LCD.c: 61:     for(i = 0; string[i] != '\0'; i++)
  2090  0364  01F5               	clrf	lcd_wstring@i
  2091  0365  01F6               	clrf	lcd_wstring@i+1
  2092  0366  2B7A               	goto	l1206
  2093  0367                     l1202:	
  2094                           
  2095                           ;LCD.c: 62:         lcd_wchar(string[i]);
  2096  0367  0875               	movf	lcd_wstring@i,w
  2097  0368  0777               	addwf	lcd_wstring@string,w
  2098  0369  0084               	movwf	4
  2099  036A  120A  118A  232E  120A  118A  	fcall	stringdir
  2100  036F  120A  118A  23F6  120A  118A  	fcall	_lcd_wchar
  2101  0374                     l1204:	
  2102  0374  3001               	movlw	1
  2103  0375  07F5               	addwf	lcd_wstring@i,f
  2104  0376  1803               	skipnc
  2105  0377  0AF6               	incf	lcd_wstring@i+1,f
  2106  0378  3000               	movlw	0
  2107  0379  07F6               	addwf	lcd_wstring@i+1,f
  2108  037A                     l1206:	
  2109  037A  0875               	movf	lcd_wstring@i,w
  2110  037B  0777               	addwf	lcd_wstring@string,w
  2111  037C  0084               	movwf	4
  2112  037D  120A  118A  232E  120A  118A  	fcall	stringdir
  2113  0382  3A00               	xorlw	0
  2114  0383  1D03               	skipz
  2115  0384  2B86               	goto	u311
  2116  0385  2B87               	goto	u310
  2117  0386                     u311:	
  2118  0386  2B67               	goto	l1202
  2119  0387                     u310:	
  2120  0387                     l43:	
  2121  0387  0008               	return
  2122  0388                     __end_of_lcd_wstring:	
  2123                           
  2124                           	psect	text6
  2125  03F6                     __ptext6:	
  2126 ;; *************** function _lcd_wchar *****************
  2127 ;; Defined at:
  2128 ;;		line 50 in file "LCD.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  dato            1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  dato            1    4[COMMON] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         1       0       0       0       0
  2144 ;;      Temps:          2       0       0       0       0
  2145 ;;      Totals:         3       0       0       0       0
  2146 ;;Total ram usage:        3 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_lcd_wstring
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _lcd_wchar
  2159  03F6                     _lcd_wchar:	
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _lcd_wchar: [wreg]
  2163                           ;lcd_wchar@dato stored from wreg
  2164  03F6  00F4               	movwf	lcd_wchar@dato
  2165  03F7                     l1146:	
  2166                           
  2167                           ;LCD.c: 51:     PORTDbits.RD7 = 1;
  2168  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2169  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2170  03F9  1788               	bsf	8,7	;volatile
  2171  03FA                     l1148:	
  2172                           
  2173                           ;LCD.c: 52:     PORTB = dato;
  2174  03FA  0874               	movf	lcd_wchar@dato,w
  2175  03FB  0086               	movwf	6	;volatile
  2176  03FC                     l1150:	
  2177                           
  2178                           ;LCD.c: 53:     PORTDbits.RD5 = 1;
  2179  03FC  1688               	bsf	8,5	;volatile
  2180                           
  2181                           ;LCD.c: 54:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2182  03FD  3006               	movlw	6
  2183  03FE  00F3               	movwf	??_lcd_wchar+1
  2184  03FF  3030               	movlw	48
  2185  0400  00F2               	movwf	??_lcd_wchar
  2186  0401                     u917:	
  2187  0401  0BF2               	decfsz	??_lcd_wchar,f
  2188  0402  2C01               	goto	u917
  2189  0403  0BF3               	decfsz	??_lcd_wchar+1,f
  2190  0404  2C01               	goto	u917
  2191  0405  0000               	nop
  2192  0406                     l1152:	
  2193                           
  2194                           ;LCD.c: 55:     PORTDbits.RD5 = 0;
  2195  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0408  1288               	bcf	8,5	;volatile
  2198  0409                     l37:	
  2199  0409  0008               	return
  2200  040A                     __end_of_lcd_wchar:	
  2201                           
  2202                           	psect	text7
  2203  0388                     __ptext7:	
  2204 ;; *************** function _lcd_cursor *****************
  2205 ;; Defined at:
  2206 ;;		line 24 in file "LCD.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  a               1    wreg     unsigned char 
  2209 ;;  b               1    5[COMMON] unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  a               1    8[COMMON] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         1       0       0       0       0
  2222 ;;      Locals:         1       0       0       0       0
  2223 ;;      Temps:          2       0       0       0       0
  2224 ;;      Totals:         4       0       0       0       0
  2225 ;;Total ram usage:        4 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    2
  2228 ;; This function calls:
  2229 ;;		_lcd_command
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _lcd_cursor
  2237  0388                     _lcd_cursor:	
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _lcd_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2241                           ;lcd_cursor@a stored from wreg
  2242  0388  00F8               	movwf	lcd_cursor@a
  2243  0389                     l1186:	
  2244                           
  2245                           ;LCD.c: 25:     switch(a){
  2246  0389  2B9A               	goto	l1194
  2247  038A                     l1188:	
  2248                           
  2249                           ;LCD.c: 27:             lcd_command(0x80+b-1);
  2250  038A  0875               	movf	lcd_cursor@b,w
  2251  038B  3E7F               	addlw	127
  2252  038C  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2253                           
  2254                           ;LCD.c: 28:             break;
  2255  0391  2BAA               	goto	l22
  2256  0392                     l1190:	
  2257                           
  2258                           ;LCD.c: 30:             lcd_command(0xC0+b-1);
  2259  0392  0875               	movf	lcd_cursor@b,w
  2260  0393  3EBF               	addlw	191
  2261  0394  120A  118A  23E1  120A  118A  	fcall	_lcd_command
  2262                           
  2263                           ;LCD.c: 31:             break;
  2264  0399  2BAA               	goto	l22
  2265  039A                     l1194:	
  2266  039A  0878               	movf	lcd_cursor@a,w
  2267  039B  00F6               	movwf	??_lcd_cursor
  2268  039C  01F7               	clrf	??_lcd_cursor+1
  2269                           
  2270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2271                           ; Switch size 1, requested type "simple"
  2272                           ; Number of cases is 1, Range of values is 0 to 0
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte            4     3 (average)
  2276                           ; direct_byte           11     8 (fixed)
  2277                           ; jumptable            260     6 (fixed)
  2278                           ;	Chosen strategy is simple_byte
  2279  039D  0877               	movf	??_lcd_cursor+1,w
  2280  039E  3A00               	xorlw	0	; case 0
  2281  039F  1903               	skipnz
  2282  03A0  2BA2               	goto	l1662
  2283  03A1  2BAA               	goto	l22
  2284  03A2                     l1662:	
  2285                           
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 2, Range of values is 1 to 2
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            7     4 (average)
  2291                           ; direct_byte           17    11 (fixed)
  2292                           ; jumptable            263     9 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  03A2  0876               	movf	??_lcd_cursor,w
  2295  03A3  3A01               	xorlw	1	; case 1
  2296  03A4  1903               	skipnz
  2297  03A5  2B8A               	goto	l1188
  2298  03A6  3A03               	xorlw	3	; case 2
  2299  03A7  1903               	skipnz
  2300  03A8  2B92               	goto	l1190
  2301  03A9  2BAA               	goto	l22
  2302  03AA                     l22:	
  2303  03AA  0008               	return
  2304  03AB                     __end_of_lcd_cursor:	
  2305                           
  2306                           	psect	text8
  2307  03E1                     __ptext8:	
  2308 ;; *************** function _lcd_command *****************
  2309 ;; Defined at:
  2310 ;;		line 16 in file "LCD.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  a               1    wreg     unsigned char 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  a               1    4[COMMON] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         1       0       0       0       0
  2326 ;;      Temps:          2       0       0       0       0
  2327 ;;      Totals:         3       0       0       0       0
  2328 ;;Total ram usage:        3 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_lcd_cursor
  2335 ;;		_lcd_setup
  2336 ;;		_main
  2337 ;;		_r_shift
  2338 ;;		_l_shift
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _lcd_command
  2344  03E1                     _lcd_command:	
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _lcd_command: [wreg]
  2348                           ;lcd_command@a stored from wreg
  2349  03E1  00F4               	movwf	lcd_command@a
  2350  03E2                     l1138:	
  2351                           
  2352                           ;LCD.c: 17:     PORTDbits.RD7 = PORTDbits.RD6 = 0;
  2353  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2354  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2355  03E4  1308               	bcf	8,6	;volatile
  2356  03E5  1388               	bcf	8,7	;volatile
  2357  03E6                     l1140:	
  2358                           
  2359                           ;LCD.c: 18:     PORTB = a;
  2360  03E6  0874               	movf	lcd_command@a,w
  2361  03E7  0086               	movwf	6	;volatile
  2362  03E8                     l1142:	
  2363                           
  2364                           ;LCD.c: 19:     PORTDbits.RD5=1;
  2365  03E8  1688               	bsf	8,5	;volatile
  2366                           
  2367                           ;LCD.c: 20:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2368  03E9  3006               	movlw	6
  2369  03EA  00F3               	movwf	??_lcd_command+1
  2370  03EB  3030               	movlw	48
  2371  03EC  00F2               	movwf	??_lcd_command
  2372  03ED                     u927:	
  2373  03ED  0BF2               	decfsz	??_lcd_command,f
  2374  03EE  2BED               	goto	u927
  2375  03EF  0BF3               	decfsz	??_lcd_command+1,f
  2376  03F0  2BED               	goto	u927
  2377  03F1  0000               	nop
  2378  03F2                     l1144:	
  2379                           
  2380                           ;LCD.c: 21:     PORTDbits.RD5=0;
  2381  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2382  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2383  03F4  1288               	bcf	8,5	;volatile
  2384  03F5                     l15:	
  2385  03F5  0008               	return
  2386  03F6                     __end_of_lcd_command:	
  2387                           
  2388                           	psect	text9
  2389  042E                     __ptext9:	
  2390 ;; *************** function _isr *****************
  2391 ;; Defined at:
  2392 ;;		line 53 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		None
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0
  2408 ;;      Temps:          2       0       0       0       0
  2409 ;;      Totals:         2       0       0       0       0
  2410 ;;Total ram usage:        2 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		Interrupt level 1
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _isr
  2421  042E                     _isr:	
  2422  042E                     i1l133:	
  2423  042E  0871               	movf	??_isr+1,w
  2424  042F  008A               	movwf	10
  2425  0430  0E70               	swapf	??_isr^(0+4294967168),w
  2426  0431  0083               	movwf	3
  2427  0432  0EFE               	swapf	btemp,f
  2428  0433  0E7E               	swapf	btemp,w
  2429  0434  0009               	retfie
  2430  0435                     __end_of_isr:	
  2431  007E                     btemp	set	126	;btemp
  2432  007E                     wtemp0	set	126
  2433                           
  2434                           	psect	intentry
  2435  0004                     __pintentry:	
  2436                           ;incstack = 0
  2437                           ; Regs used in _isr: []
  2438                           
  2439  0004                     interrupt_function:	
  2440  007E                     saved_w	set	btemp
  2441  0004  00FE               	movwf	btemp
  2442  0005  0E03               	swapf	3,w
  2443  0006  00F0               	movwf	??_isr
  2444  0007  080A               	movf	10,w
  2445  0008  00F1               	movwf	??_isr+1
  2446  0009  120A  118A  2C2E   	ljmp	_isr


Data Sizes:
    Strings     47
    Constant    0
    Data        9
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      2      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_wstring@string	PTR unsigned char  size(1) Largest target is 13
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[11]), STR_7(CODE[2]), 
		 -> STR_6(CODE[8]), STR_5(CODE[3]), STR_4(CODE[6]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_lcd_cursor
    _setup->_lcd_setup
    _lcd_setup->_lcd_command
    _lcd_wstring->_lcd_wchar
    _lcd_cursor->_lcd_command

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1586
                                              0 BANK0      2     2      0
                        _lcd_command
                         _lcd_cursor
                          _lcd_wchar
                        _lcd_wstring
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     382
                          _lcd_setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _lcd_setup                                            2     2      0      22
                                              5 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_wstring                                          3     3      0     442
                                              5 COMMON     3     3      0
                          _lcd_wchar
 ---------------------------------------------------------------------------------
 (2) _lcd_wchar                                            3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           4     3      1     696
                                              5 COMMON     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_cursor
     _lcd_command
   _lcd_wchar
   _lcd_wstring
     _lcd_wchar
   _setup
     _lcd_setup
       _lcd_command
     _spiInit
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 18:37:32 2020

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l22 03AA                        l15 03F5                        l43 0387  
                      l37 0409                        l46 032D                        _a1 007A  
                      _a2 002B                        _a3 0027                        _b1 0023  
                      _b2 002A                        _a4 007B                        _b3 0026  
                      _c1 0022                        _b4 002E                        _c2 0029  
                      _c3 0025                        _c4 002D                        _d2 0028  
                      _d3 0024                        _d4 002C                        fsr 0004  
            ?_lcd_wstring 0070                       l202 03DB                       l203 03E0  
                     l212 043A                       l163 0121                       l186 03CA  
                     u300 03D3                       u301 03D2                       u310 0387  
                     u311 0386                       u600 0058                       u601 0057  
                     u610 0067              __CFG_CPD$OFF 0000                       u611 0066  
                     u700 00EE                       u620 0076                       u701 00ED  
                     u621 0075                       u710 00FD                       u630 0085  
                     u711 00FC                       u631 0084                       u800 026D  
                     u720 010C                       u640 0094                       u801 026C  
                     u721 010B                       u641 0093                       u810 027A  
                     u730 011B                       u650 00A3                       u811 0279  
                     u731 011A                       u651 00A2                       u740 0130  
                     u660 00B2                       u580 0047                       u741 012F  
                     u661 00B1                       u581 0046                       u750 013D  
                     u670 00C1                       u590 004C                       u751 013C  
                     u671 00C0                       u591 004B                       u760 0197  
                     u680 00D0                       u761 0196                       u681 00CF  
                     u770 01A4                       u690 00DF                       u907 0310  
                     u771 01A3                       u691 00DE                       u827 003D  
                     u780 0202                       u917 0401                       u781 0201  
                     u837 0147                       u790 020F                       u927 03ED  
                     u791 020E                       u847 01AE                       u857 0219  
                     u867 0284                       u877 02DC                       u887 02F5  
                     u897 0304                       _isr 042E                       fsr0 0004  
                     indf 0000               lcd_cursor@a 0078               lcd_cursor@b 0075  
            __CFG_LVP$OFF 0000              lcd_command@a 0074                      l1200 0364  
                    l1202 0367                      l1210 03B6                      l1140 03E6  
                    l1204 0374                      l1212 03BB                      l1220 0436  
                    l1142 03E8                      l1150 03FC                      l1206 037A  
                    l1214 03C4                      l1144 03F2                      l1152 0406  
                    l1160 02FA                      l1216 03C7                      l1208 03AB  
                    l1138 03E2                      l1146 03F7                      l1170 031B  
                    l1162 0300                      l1148 03FA                      l1172 0321  
                    l1164 0308                      l1156 02E8                      l1180 03D5  
                    l1500 00DF                      l1190 0392                      l1174 0327  
                    l1166 030E                      l1158 02F1                      l1182 03D7  
                    l1510 0106                      l1502 00E8                      l1168 0315  
                    l1184 03DA                      l1176 03CC                      l1600 0249  
                    l1512 010C                      l1504 00EE                      l1520 0121  
                    l1194 039A                      l1186 0389                      l1178 03D3  
                    l1610 026D                      l1602 0251                      l1530 013D  
                    l1522 0122                      l1514 0115                      l1506 00F7  
                    l1450 002C                      l1188 038A                      l1620 0294  
                    l1612 0274                      l1604 0259                      l1540 0169  
                    l1532 0143                      l1516 011B                      l1508 00FD  
                    l1460 0050                      l1524 0128                      l1452 0037  
                    l1630 02BA                      l1622 029A                      l1614 027A  
                    l1606 0261                      l1550 018B                      l1542 016F  
                    l1534 014B                      l1526 0130                      l1518 011F  
                    l1470 0070                      l1462 0053                      l1454 0041  
                    l1640 02E0                      l1632 02C2                      l1624 02A6  
                    l1616 0280                      l1608 0267                      l1560 01AA  
                    l1544 0177                      l1536 0157                      l1552 0191  
                    l1528 0137                      l1480 0094                      l1472 0076  
                    l1464 0058                      l1456 0047                      l1634 02CA  
                    l1626 02AC                      l1618 0288                      l1570 01D8  
                    l1562 01B2                      l1554 0197                      l1546 017D  
                    l1538 015D                      l1490 00BB                      l1482 009D  
                    l1474 007F                      l1466 0061                      l1458 004C  
                    l1636 02D0                      l1628 02B4                      l1572 01E0  
                    l1564 01BE                      l1580 01FC                      l1556 019E  
                    l1548 0185                      l1492 00C1                      l1484 00A3  
                    l1476 0085                      l1468 0067                      l1662 03A2  
                    l1638 02D6                      l1590 021D                      l1582 0202  
                    l1574 01E8                      l1566 01C4                      l1558 01A4  
                    l1494 00CA                      l1486 00AC                      l1478 008E  
                    _ADC1 0037                      l1592 0229                      l1584 0209  
                    l1576 01F0                      l1568 01D0                      l1496 00D0  
                    l1488 00B2                      _ADC2 0036                      l1594 022F  
                    l1586 020F                      l1578 01F6                      l1498 00D9  
                    l1596 023B                      l1588 0215                      l1598 0243  
                    ?_isr 0070                      STR_1 0334                      STR_2 035D  
                    STR_3 035F                      STR_4 0354                      STR_5 035A  
                    STR_6 034C                      STR_7 035D                      STR_8 0341  
                    STR_9 035D              __CFG_WRT$OFF 0000                      _main 002C  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070                     STR_10 0361  
           __CFG_WDTE$OFF 0000                     i1l133 042E                     _PORTA 0005  
                   _PORTB 0006                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000                     _setup 03AB  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 03E1  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 02E8              lcd_wstring@i 0075  
                  ??_main 0039             lcd_wchar@dato 0074                    ?_setup 0070  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPBUF 0013                    _SSPCON 0014            __CFG_PWRTE$OFF 0000  
    __size_of_lcd_command 0015                    _estado 0038      __size_of_lcd_wstring 0025  
                  saved_w 007E          __end_of_spiWrite 043B                 ??_spiInit 0075  
 __end_of__initialization 0028            __pcstackCOMMON 0070              __pidataBANK0 041D  
           __end_of_setup 03CB        __size_of_lcd_wchar 0014        __size_of_lcd_setup 0046  
                 ??_setup 0077                __pbssBANK0 0020                __pmaintext 002C  
              __pintentry 0004                _lcd_cursor 0388                   _SSPSTAT 0094  
              __stringtab 032E                 ?_spiWrite 0070         __end_of_lcd_wchar 040A  
       __end_of_lcd_setup 032E                   __ptext1 0435                   __ptext2 03AB  
                 __ptext3 03CB                   __ptext4 02E8                   __ptext5 0363  
                 __ptext6 03F6                   __ptext7 0388                   __ptext8 03E1  
                 __ptext9 042E                   _espera1 0020                   _espera2 0034  
                 _espera3 0032                   _espera4 0030              __size_of_isr 0007  
                 _recorre 0079                   _spiInit 03CB                   clrloop0 0427  
    end_of_initialization 0028                ??_spiWrite 0072                 _PORTDbits 0008  
             ?_lcd_cursor 0075               spiWrite@dat 0072             ??_lcd_command 0072  
           ??_lcd_wstring 0075       start_initialization 000F               __end_of_isr 0435  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_lcd_cursor 0023                init_fetch0 040A  
     __end_of_lcd_command 03F6               __pdataBANK0 0030               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0039       __end_of_lcd_wstring 0388  
       lcd_wstring@string 0077         __size_of_spiWrite 0006                 __pstrings 032E  
               _lcd_wchar 03F6                 _lcd_setup 02E8                  ?_spiInit 0072  
          __size_of_setup 0020      spiInit@sTransmitEdge 0074         interrupt_function 0004  
               clear_ram0 0426                  _PIE1bits 008C               _lcd_command 03E1  
      spiInit@sDataSample 0072                  _PIR1bits 000C                ?_lcd_wchar 0070  
              ?_lcd_setup 0070               __stringbase 0333               _lcd_wstring 0363  
            ??_lcd_cursor 0076        __end_of_lcd_cursor 03AB        __end_of__stringtab 0334  
        __size_of_spiInit 0016         __CFG_BOR4V$BOR40V 0000                  _contador 002F  
           __size_of_main 02BC                  _spiWrite 0435              spiInit@sType 0075  
       spiInit@sClockIdle 0073               ??_lcd_wchar 0072               ??_lcd_setup 0075  
                init_ram0 040E                  intlevel1 0000                 stringcode 032E  
                stringdir 032E                  stringtab 032E              ?_lcd_command 0070  
